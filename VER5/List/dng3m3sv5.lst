
AVRASM ver. 2.1.30  D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER5\List\dng3m3sv5.asm Mon Dec 07 14:42:23 2015

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c030      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 c268      	RJMP _timer1_ovf_isr
000009 c1c6      	RJMP _timer0_ovf_isr
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000013 0000      	.DW  0x0000
                 
                 _0x3:
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER5\List\dng3m3sv5.asm(1088): warning: .cseg .db misalignment - padding zero byte
000014 007c      	.DB  0x7C
                 _0x4:
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER5\List\dng3m3sv5.asm(1090): warning: .cseg .db misalignment - padding zero byte
000015 007c      	.DB  0x7C
                 _0x5:
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER5\List\dng3m3sv5.asm(1092): warning: .cseg .db misalignment - padding zero byte
000016 000a      	.DB  0xA
                 _0x6:
000017 003f
000018 0006
000019 005b
00001a 004f      	.DB  0x3F,0x0,0x6,0x0,0x5B,0x0,0x4F,0x0
00001b 0066
00001c 006d
00001d 007d
00001e 0007      	.DB  0x66,0x0,0x6D,0x0,0x7D,0x0,0x7,0x0
00001f 007f
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER5\List\dng3m3sv5.asm(1096): warning: .cseg .db misalignment - padding zero byte
000020 006f      	.DB  0x7F,0x0,0x6F
                 
                 __GLOBAL_INI_TBL:
000021 0001      	.DW  0x01
000022 0002      	.DW  0x02
000023 0026      	.DW  __REG_BIT_VARS*2
                 
000024 0001      	.DW  0x01
000025 017e      	.DW  _cou_r_pre
000026 0028      	.DW  _0x3*2
                 
000027 0001      	.DW  0x01
000028 0180      	.DW  _cou_g_pre
000029 002a      	.DW  _0x4*2
                 
00002a 0001      	.DW  0x01
00002b 0182      	.DW  _cou_y_pre
00002c 002c      	.DW  _0x5*2
                 
00002d 0013      	.DW  0x13
00002e 018a      	.DW  _seg_array
00002f 002e      	.DW  _0x6*2
                 
                 _0xFFFFFFFF:
000030 0000      	.DW  0
                 
                 __RESET:
000031 94f8      	CLI
000032 27ee      	CLR  R30
000033 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000034 e0f1      	LDI  R31,1
000035 bffb      	OUT  GICR,R31
000036 bfeb      	OUT  GICR,R30
000037 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000038 e1f8      	LDI  R31,0x18
000039 bdf1      	OUT  WDTCR,R31
00003a bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00003b e08d      	LDI  R24,(14-2)+1
00003c e0a2      	LDI  R26,2
00003d 27bb      	CLR  R27
                 __CLEAR_REG:
00003e 93ed      	ST   X+,R30
00003f 958a      	DEC  R24
000040 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000041 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000042 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000043 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000044 93ed      	ST   X+,R30
000045 9701      	SBIW R24,1
000046 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000047 e4e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000048 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000049 9185      	LPM  R24,Z+
00004a 9195      	LPM  R25,Z+
00004b 9700      	SBIW R24,0
00004c f061      	BREQ __GLOBAL_INI_END
00004d 91a5      	LPM  R26,Z+
00004e 91b5      	LPM  R27,Z+
00004f 9005      	LPM  R0,Z+
000050 9015      	LPM  R1,Z+
000051 01bf      	MOVW R22,R30
000052 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000053 9005      	LPM  R0,Z+
000054 920d      	ST   X+,R0
000055 9701      	SBIW R24,1
000056 f7e1      	BRNE __GLOBAL_INI_LOOP
000057 01fb      	MOVW R30,R22
000058 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000059 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00005a bfed      	OUT  SPL,R30
00005b e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005e e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005f c231      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega8
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;
                 ;// Declare your global variables here
                 ;
                 ;volatile int d_type=0, donvi, chuc, tram, d_anod=0, cou_dr=0, cou_dg=0, cou_dy=0, i=0;
                 ;volatile int cou_r=0, cou_g=0, cou_y=0, cou_1s=0, f_yell=0, cou_lm=0;
                 ;volatile int cou_r_pre=124, cou_g_pre=124, cou_y_pre=10, f_red=0, f_gree=0, kds_cv=0;
                 
                 	.DSEG
                 ;volatile bit f_cv=0, gree=0, yell=0, red=0;
                 ;
                 ;#define li_r PINB.1
                 ;#define li_g PINB.2
                 ;
                 ;#define leddch PORTC.0
                 ;#define ledxch PORTC.1
                 ;#define ledvdv PORTC.2
                 ;#define ledxdv PORTC.3
                 ;#define ledddv PORTC.4
                 ;#define ledxtr PORTC.5
                 ;#define leddtr PORTB.5
                 ;
                 ;#include <setup_interupt.c>
                 ;
                 ;
                 ;void set_interupt01(){
                 ; 0000 001F void set_interupt01(){
                 
                 	.CSEG
                 _set_interupt01:
                 ;
                 ;// Timer/Counter 0 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: 125.000 kHz
                 ;TCCR0=0x03;
000060 e0e3      	LDI  R30,LOW(3)
000061 bfe3      	OUT  0x33,R30
                 ;TCNT0=0x82;
000062 e8e2      	LDI  R30,LOW(130)
000063 bfe2      	OUT  0x32,R30
                 ;
                 ;// Timer/Counter 1 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: 1000.000 kHz
                 ;// Mode: Normal top=0xFFFF
                 ;// OC1A output: Discon.
                 ;// OC1B output: Discon.
                 ;// Noise Canceler: Off
                 ;// Input Capture on Falling Edge
                 ;// Timer1 Overflow Interrupt: On
                 ;// Input Capture Interrupt: Off
                 ;// Compare A Match Interrupt: Off
                 ;// Compare B Match Interrupt: Off
                 ;TCCR1A=0x00;
000064 e0e0      	LDI  R30,LOW(0)
000065 bdef      	OUT  0x2F,R30
                 ;TCCR1B=0x02;
000066 e0e2      	LDI  R30,LOW(2)
000067 bdee      	OUT  0x2E,R30
                 ;TCNT1H=0xFC;
000068 d2b6      	RCALL SUBOPT_0x0
                 ;TCNT1L=0x17;
                 ;ICR1H=0x00;
000069 d2ba      	RCALL SUBOPT_0x1
                 ;ICR1L=0x00;
                 ;OCR1AH=0x00;
                 ;OCR1AL=0x00;
                 ;OCR1BH=0x00;
                 ;OCR1BL=0x00;
                 ;
                 ;// Timer(s)/Counter(s) Interrupt(s) initialization
                 ;TIMSK=0x05;
00006a e0e5      	LDI  R30,LOW(5)
00006b bfe9      	OUT  0x39,R30
                 ;
                 ;// Global enable interrupts
                 ;#asm("sei")
00006c 9478      	sei
                 ;
                 ;}
00006d 9508      	RET
                 ;
                 ;void reset_interupt01(){
                 _reset_interupt01:
                 ;
                 ;// Timer/Counter 0 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: Timer 0 Stopped
                 ;TCCR0=0x00;
00006e e0e0      	LDI  R30,LOW(0)
00006f bfe3      	OUT  0x33,R30
                 ;TCNT0=0x00;
000070 bfe2      	OUT  0x32,R30
                 ;
                 ;// Timer/Counter 1 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: Timer1 Stopped
                 ;// Mode: Normal top=0xFFFF
                 ;// OC1A output: Discon.
                 ;// OC1B output: Discon.
                 ;// Noise Canceler: Off
                 ;// Input Capture on Falling Edge
                 ;// Timer1 Overflow Interrupt: Off
                 ;// Input Capture Interrupt: Off
                 ;// Compare A Match Interrupt: Off
                 ;// Compare B Match Interrupt: Off
                 ;TCCR1A=0x00;
000071 bdef      	OUT  0x2F,R30
                 ;TCCR1B=0x00;
000072 bdee      	OUT  0x2E,R30
                 ;TCNT1H=0x00;
000073 bded      	OUT  0x2D,R30
                 ;TCNT1L=0x00;
000074 bdec      	OUT  0x2C,R30
                 ;ICR1H=0x00;
000075 d2ae      	RCALL SUBOPT_0x1
                 ;ICR1L=0x00;
                 ;OCR1AH=0x00;
                 ;OCR1AL=0x00;
                 ;OCR1BH=0x00;
                 ;OCR1BL=0x00;
                 ;
                 ;// Timer(s)/Counter(s) Interrupt(s) initialization
                 ;TIMSK=0x00;
000076 e0e0      	LDI  R30,LOW(0)
000077 bfe9      	OUT  0x39,R30
                 ;
                 ;// Watchdog Timer initialization
                 ;// Watchdog Timer Prescaler: OSC/32k
                 ;#pragma optsize-
                 ;WDTCR=0x19;
000078 e1e9      	LDI  R30,LOW(25)
000079 bde1      	OUT  0x21,R30
                 ;WDTCR=0x09;
00007a e0e9      	LDI  R30,LOW(9)
00007b bde1      	OUT  0x21,R30
                 ;#ifdef _OPTIMIZE_SIZE_
                 ;#pragma optsize+
                 ;#endif
                 ;
                 ;// Global disable interrupts
                 ;#asm("cli")
00007c 94f8      	cli
                 ;
                 ;}
00007d 9508      	RET
                 ;#include <segdisplay.c>
                 ;
                 ;
                 ;// Define seg a >>> g PORTD
                 ;
                 ;int seg_array[11]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x00};
                 
                 	.DSEG
                 ;
                 ;void seg_display(char var7seg)
                 ; 0000 0020     {
                 
                 	.CSEG
                 _seg_display:
                 ;    switch (var7seg)
                 ;	var7seg -> Y+0
00007e 81e8      	LD   R30,Y
00007f e0f0      	LDI  R31,0
                 ;        {
                 ;        case 0: PORTD=seg_array[0];
000080 9730      	SBIW R30,0
000081 f419      	BRNE _0xA
000082 91e0 018a 	LDS  R30,_seg_array
000084 c03f      	RJMP _0x16B
                 ;                break;
                 ;        case 1: PORTD=seg_array[1];
                 _0xA:
000085 d2a6      	RCALL SUBOPT_0x2
000086 f419      	BRNE _0xB
                +
000087 91e0 018c+LDS R30 , _seg_array + ( 2 )
                 	__GETB1MN _seg_array,2
000089 c03a      	RJMP _0x16B
                 ;                break;
                 ;        case 2: PORTD=seg_array[2];
                 _0xB:
00008a d2a5      	RCALL SUBOPT_0x3
00008b f419      	BRNE _0xC
                +
00008c 91e0 018e+LDS R30 , _seg_array + ( 4 )
                 	__GETB1MN _seg_array,4
00008e c035      	RJMP _0x16B
                 ;                break;
                 ;        case 3: PORTD=seg_array[3];
                 _0xC:
00008f d2a4      	RCALL SUBOPT_0x4
000090 f419      	BRNE _0xD
                +
000091 91e0 0190+LDS R30 , _seg_array + ( 6 )
                 	__GETB1MN _seg_array,6
000093 c030      	RJMP _0x16B
                 ;                break;
                 ;        case 4: PORTD=seg_array[4];
                 _0xD:
000094 30e4      	CPI  R30,LOW(0x4)
000095 e0a0      	LDI  R26,HIGH(0x4)
000096 07fa      	CPC  R31,R26
000097 f419      	BRNE _0xE
                +
000098 91e0 0192+LDS R30 , _seg_array + ( 8 )
                 	__GETB1MN _seg_array,8
00009a c029      	RJMP _0x16B
                 ;                break;
                 ;        case 5: PORTD=seg_array[5];
                 _0xE:
00009b 30e5      	CPI  R30,LOW(0x5)
00009c e0a0      	LDI  R26,HIGH(0x5)
00009d 07fa      	CPC  R31,R26
00009e f419      	BRNE _0xF
                +
00009f 91e0 0194+LDS R30 , _seg_array + ( 10 )
                 	__GETB1MN _seg_array,10
0000a1 c022      	RJMP _0x16B
                 ;                break;
                 ;        case 6: PORTD=seg_array[6];
                 _0xF:
0000a2 30e6      	CPI  R30,LOW(0x6)
0000a3 e0a0      	LDI  R26,HIGH(0x6)
0000a4 07fa      	CPC  R31,R26
0000a5 f419      	BRNE _0x10
                +
0000a6 91e0 0196+LDS R30 , _seg_array + ( 12 )
                 	__GETB1MN _seg_array,12
0000a8 c01b      	RJMP _0x16B
                 ;                break;
                 ;        case 7: PORTD=seg_array[7];
                 _0x10:
0000a9 30e7      	CPI  R30,LOW(0x7)
0000aa e0a0      	LDI  R26,HIGH(0x7)
0000ab 07fa      	CPC  R31,R26
0000ac f419      	BRNE _0x11
                +
0000ad 91e0 0198+LDS R30 , _seg_array + ( 14 )
                 	__GETB1MN _seg_array,14
0000af c014      	RJMP _0x16B
                 ;                break;
                 ;        case 8: PORTD=seg_array[8];
                 _0x11:
0000b0 30e8      	CPI  R30,LOW(0x8)
0000b1 e0a0      	LDI  R26,HIGH(0x8)
0000b2 07fa      	CPC  R31,R26
0000b3 f419      	BRNE _0x12
                +
0000b4 91e0 019a+LDS R30 , _seg_array + ( 16 )
                 	__GETB1MN _seg_array,16
0000b6 c00d      	RJMP _0x16B
                 ;                break;
                 ;        case 9: PORTD=seg_array[9];
                 _0x12:
0000b7 30e9      	CPI  R30,LOW(0x9)
0000b8 e0a0      	LDI  R26,HIGH(0x9)
0000b9 07fa      	CPC  R31,R26
0000ba f419      	BRNE _0x13
                +
0000bb 91e0 019c+LDS R30 , _seg_array + ( 18 )
                 	__GETB1MN _seg_array,18
0000bd c006      	RJMP _0x16B
                 ;                break;
                 ;        case 10: PORTD=seg_array[10];
                 _0x13:
0000be 30ea      	CPI  R30,LOW(0xA)
0000bf e0a0      	LDI  R26,HIGH(0xA)
0000c0 07fa      	CPC  R31,R26
0000c1 f419      	BRNE _0x9
                +
0000c2 91e0 019e+LDS R30 , _seg_array + ( 20 )
                 	__GETB1MN _seg_array,20
                 _0x16B:
0000c4 bbe2      	OUT  0x12,R30
                 ;                break;
                 ;        }
                 _0x9:
                 ;	}
0000c5 9621      	ADIW R28,1
0000c6 9508      	RET
                 ;
                 ;void dislay7seg()
                 ;    {
                 _dislay7seg:
                 ;    ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000c7 d270      	RCALL SUBOPT_0x5
                 ;    ledddv = 0;
0000c8 d274      	RCALL SUBOPT_0x6
                 ;    leddch = 0;
                 ;    leddtr = 0;
                 ;    seg_display(10);
                 ;
                 ;    switch (d_type)
0000c9 d279      	RCALL SUBOPT_0x7
                 ;        {
                 ;        case 1:
0000ca f5a1      	BRNE _0x26
                 ;        {
                 ;        if (d_anod > 9) d_anod=1;
0000cb d27c      	RCALL SUBOPT_0x8
0000cc 971a      	SBIW R26,10
0000cd f00c      	BRLT _0x27
0000ce d27e      	RCALL SUBOPT_0x9
                 ;        if (d_anod <= 2)
                 _0x27:
0000cf d284      	RCALL SUBOPT_0xA
0000d0 f424      	BRGE _0x28
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000d1 d266      	RCALL SUBOPT_0x5
                 ;            ledddv = 1;
0000d2 9aac      	SBI  0x15,4
                 ;            leddch = 0;
0000d3 d283      	RCALL SUBOPT_0xB
                 ;            leddtr = 0;
                 ;            seg_display(donvi);
0000d4 d285      	RCALL SUBOPT_0xC
                 ;            }
                 ;        if ((d_anod > 2)&&(d_anod <= 3))
                 _0x28:
0000d5 d27e      	RCALL SUBOPT_0xA
0000d6 f014      	BRLT _0x38
0000d7 d286      	RCALL SUBOPT_0xD
0000d8 f00c      	BRLT _0x39
                 _0x38:
0000d9 c002      	RJMP _0x37
                 _0x39:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000da d25d      	RCALL SUBOPT_0x5
                 ;            ledddv = 0;
0000db d261      	RCALL SUBOPT_0x6
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        if ((d_anod > 3)&&(d_anod <= 5))
                 _0x37:
0000dc d281      	RCALL SUBOPT_0xD
0000dd f014      	BRLT _0x49
0000de d282      	RCALL SUBOPT_0xE
0000df f00c      	BRLT _0x4A
                 _0x49:
0000e0 c005      	RJMP _0x48
                 _0x4A:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000e1 d256      	RCALL SUBOPT_0x5
                 ;            ledddv = 0;
0000e2 98ac      	CBI  0x15,4
                 ;            leddch = 1;
0000e3 9aa8      	SBI  0x15,0
                 ;            leddtr = 0;
0000e4 98c5      	CBI  0x18,5
                 ;            seg_display(chuc);
0000e5 d27e      	RCALL SUBOPT_0xF
                 ;            }
                 ;        if ((d_anod > 5)&&(d_anod <= 6))
                 _0x48:
0000e6 d27a      	RCALL SUBOPT_0xE
0000e7 f014      	BRLT _0x5A
0000e8 d27f      	RCALL SUBOPT_0x10
0000e9 f00c      	BRLT _0x5B
                 _0x5A:
0000ea c002      	RJMP _0x59
                 _0x5B:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000eb d24c      	RCALL SUBOPT_0x5
                 ;            ledddv = 0;
0000ec d250      	RCALL SUBOPT_0x6
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        if ((d_anod > 6)&&(d_anod <= 8))
                 _0x59:
0000ed d27a      	RCALL SUBOPT_0x10
0000ee f014      	BRLT _0x6B
0000ef d27b      	RCALL SUBOPT_0x11
0000f0 f00c      	BRLT _0x6C
                 _0x6B:
0000f1 c005      	RJMP _0x6A
                 _0x6C:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000f2 d245      	RCALL SUBOPT_0x5
                 ;            ledddv = 0;
0000f3 98ac      	CBI  0x15,4
                 ;            leddch = 0;
0000f4 98a8      	CBI  0x15,0
                 ;            leddtr = 1;
0000f5 9ac5      	SBI  0x18,5
                 ;            seg_display(tram);
0000f6 d277      	RCALL SUBOPT_0x12
                 ;            }
                 ;        if ((d_anod > 8)&&(d_anod <= 9))
                 _0x6A:
0000f7 d273      	RCALL SUBOPT_0x11
0000f8 f014      	BRLT _0x7C
0000f9 d278      	RCALL SUBOPT_0x13
0000fa f00c      	BRLT _0x7D
                 _0x7C:
0000fb c002      	RJMP _0x7B
                 _0x7D:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000fc d23b      	RCALL SUBOPT_0x5
                 ;            ledddv = 0;
0000fd d23f      	RCALL SUBOPT_0x6
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        break;
                 _0x7B:
0000fe c04b      	RJMP _0x25
                 ;        }
                 ;        case 2:
                 _0x26:
0000ff d230      	RCALL SUBOPT_0x3
000100 f5b1      	BRNE _0x8C
                 ;        {
                 ;        if (d_anod > 9) d_anod=1;
000101 d270      	RCALL SUBOPT_0x13
000102 f00c      	BRLT _0x8D
000103 d249      	RCALL SUBOPT_0x9
                 ;        if (d_anod <= 2)
                 _0x8D:
000104 d24f      	RCALL SUBOPT_0xA
000105 f424      	BRGE _0x8E
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000106 d26e      	RCALL SUBOPT_0x14
                 ;            ledxdv=1;
000107 9aab      	SBI  0x15,3
                 ;            ledxch=0;
000108 d26f      	RCALL SUBOPT_0x15
                 ;            ledxtr=0;
                 ;            seg_display(donvi);
000109 d250      	RCALL SUBOPT_0xC
                 ;            }
                 ;        if ((d_anod > 2)&&(d_anod <= 3))
                 _0x8E:
00010a d249      	RCALL SUBOPT_0xA
00010b f014      	BRLT _0x9E
00010c d251      	RCALL SUBOPT_0xD
00010d f00c      	BRLT _0x9F
                 _0x9E:
00010e c003      	RJMP _0x9D
                 _0x9F:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
00010f d265      	RCALL SUBOPT_0x14
                 ;            ledxdv=0;
000110 d26a      	RCALL SUBOPT_0x16
                 ;            ledxch=0;
                 ;            ledxtr=0;
                 ;            seg_display(10);
000111 d26b      	RCALL SUBOPT_0x17
                 ;            }
                 ;        if ((d_anod > 3)&&(d_anod <= 5))
                 _0x9D:
000112 d24b      	RCALL SUBOPT_0xD
000113 f014      	BRLT _0xAF
000114 d24c      	RCALL SUBOPT_0xE
000115 f00c      	BRLT _0xB0
                 _0xAF:
000116 c005      	RJMP _0xAE
                 _0xB0:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000117 d25d      	RCALL SUBOPT_0x14
                 ;            ledxdv=0;
000118 98ab      	CBI  0x15,3
                 ;            ledxch=1;
000119 9aa9      	SBI  0x15,1
                 ;            ledxtr=0;
00011a 98ad      	CBI  0x15,5
                 ;            seg_display(chuc);
00011b d248      	RCALL SUBOPT_0xF
                 ;            }
                 ;        if ((d_anod > 5)&&(d_anod <= 6))
                 _0xAE:
00011c d244      	RCALL SUBOPT_0xE
00011d f014      	BRLT _0xC0
00011e d249      	RCALL SUBOPT_0x10
00011f f00c      	BRLT _0xC1
                 _0xC0:
000120 c003      	RJMP _0xBF
                 _0xC1:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000121 d253      	RCALL SUBOPT_0x14
                 ;            ledxdv=0;
000122 d258      	RCALL SUBOPT_0x16
                 ;            ledxch=0;
                 ;            ledxtr=0;
                 ;            seg_display(10);
000123 d259      	RCALL SUBOPT_0x17
                 ;            }
                 ;        if ((d_anod > 6)&&(d_anod <= 8))
                 _0xBF:
000124 d243      	RCALL SUBOPT_0x10
000125 f014      	BRLT _0xD1
000126 d244      	RCALL SUBOPT_0x11
000127 f00c      	BRLT _0xD2
                 _0xD1:
000128 c005      	RJMP _0xD0
                 _0xD2:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000129 d24b      	RCALL SUBOPT_0x14
                 ;            ledxdv=0;
00012a 98ab      	CBI  0x15,3
                 ;            ledxch=0;
00012b 98a9      	CBI  0x15,1
                 ;            ledxtr=1;
00012c 9aad      	SBI  0x15,5
                 ;            seg_display(tram);
00012d d240      	RCALL SUBOPT_0x12
                 ;            }
                 ;        if ((d_anod > 8)&&(d_anod <= 9))
                 _0xD0:
00012e d23c      	RCALL SUBOPT_0x11
00012f f014      	BRLT _0xE2
000130 d241      	RCALL SUBOPT_0x13
000131 f00c      	BRLT _0xE3
                 _0xE2:
000132 c003      	RJMP _0xE1
                 _0xE3:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000133 d241      	RCALL SUBOPT_0x14
                 ;            ledxdv=0;
000134 d246      	RCALL SUBOPT_0x16
                 ;            ledxch=0;
                 ;            ledxtr=0;
                 ;            seg_display(10);
000135 d247      	RCALL SUBOPT_0x17
                 ;            }
                 ;        break;
                 _0xE1:
000136 c013      	RJMP _0x25
                 ;        }
                 ;        case 3:
                 _0x8C:
000137 d1fc      	RCALL SUBOPT_0x4
000138 f489      	BRNE _0x25
                 ;        {
                 ;        if (d_anod > 9) d_anod=1;
000139 d238      	RCALL SUBOPT_0x13
00013a f00c      	BRLT _0xF3
00013b d211      	RCALL SUBOPT_0x9
                 ;        if (d_anod <= 2)
                 _0xF3:
00013c d217      	RCALL SUBOPT_0xA
00013d f42c      	BRGE _0xF4
                 ;            {
                 ;            ledddv=0; ledxdv=0; ledxch=0; ledxtr=0;
00013e 98ac      	CBI  0x15,4
00013f d23b      	RCALL SUBOPT_0x16
                 ;            ledvdv = 1;
000140 9aaa      	SBI  0x15,2
                 ;            leddch = 0;
000141 d215      	RCALL SUBOPT_0xB
                 ;            leddtr = 0;
                 ;            seg_display(donvi);
000142 d217      	RCALL SUBOPT_0xC
                 ;            }
                 ;        if ((d_anod > 2)&&(d_anod <= 9))
                 _0xF4:
000143 d210      	RCALL SUBOPT_0xA
000144 f014      	BRLT _0x104
000145 d22c      	RCALL SUBOPT_0x13
000146 f00c      	BRLT _0x105
                 _0x104:
000147 c002      	RJMP _0x103
                 _0x105:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
000148 d1ef      	RCALL SUBOPT_0x5
                 ;            ledddv = 0;
000149 d1f3      	RCALL SUBOPT_0x6
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        break;
                 _0x103:
                 ;        }
                 ;        }
                 _0x25:
                 ;    }
00014a 9508      	RET
                 ;#include <calculate.c>
                 ;
                 ;
                 ;void calculate()
                 ; 0000 0021     {
                 _calculate:
                 ;          if (d_type ==1)
00014b d234      	RCALL SUBOPT_0x18
00014c f549      	BRNE _0x114
                 ;            {
                 ;            cou_1s=0;
00014d d238      	RCALL SUBOPT_0x19
                 ;            cou_r_pre--;
                 ;            tram  = cou_r_pre/100;
                 ;            chuc  = (cou_r_pre-tram*100)/10;
                 ;            donvi = (cou_r_pre%10)&0x0f;
                 ;
                 ;            if (chuc == 0) chuc=10;
00014e f411      	BRNE _0x115
00014f d270      	RCALL SUBOPT_0x1A
000150 d272      	RCALL SUBOPT_0x1B
                 ;            if (tram == 0) tram=10;
                 _0x115:
000151 d276      	RCALL SUBOPT_0x1C
000152 f409      	BRNE _0x116
000153 d27a      	RCALL SUBOPT_0x1D
                 ;            while(d_type ==1)
                 _0x116:
                 _0x117:
000154 d22b      	RCALL SUBOPT_0x18
000155 f501      	BRNE _0x119
                 ;                {
                 ;                if (cou_1s >=40)
000156 d27d      	RCALL SUBOPT_0x1E
000157 f0ec      	BRLT _0x11A
                 ;                    {
                 ;                    if ((li_r ==1)&&(li_g ==1)) d_type=3;
000158 9bb1      	SBIS 0x16,1
000159 c002      	RJMP _0x11C
00015a 99b2      	SBIC 0x16,2
00015b c001      	RJMP _0x11D
                 _0x11C:
00015c c002      	RJMP _0x11B
                 _0x11D:
00015d d27c      	RCALL SUBOPT_0x1F
00015e d27e      	RCALL SUBOPT_0x20
                 ;                    cou_1s =0;
                 _0x11B:
00015f d226      	RCALL SUBOPT_0x19
                 ;                    cou_r_pre--;
                 ;                    tram  = cou_r_pre/100;
                 ;
                 ;                    chuc  = (cou_r_pre-tram*100)/10;
                 ;                    donvi = (cou_r_pre%10)&0x0f;
                 ;
                 ;                    if (chuc == 0){ if (cou_r_pre > 99) chuc = 0; else chuc = 10; }
000160 f441      	BRNE _0x11E
000161 d280      	RCALL SUBOPT_0x21
000162 36a4      	CPI  R26,LOW(0x64)
000163 e0e0      	LDI  R30,HIGH(0x64)
000164 07be      	CPC  R27,R30
000165 f014      	BRLT _0x11F
000166 d280      	RCALL SUBOPT_0x22
000167 c001      	RJMP _0x120
                 _0x11F:
000168 d284      	RCALL SUBOPT_0x23
                 _0x120:
                 ;                    if (tram == 0) tram=10;
                 _0x11E:
000169 d25e      	RCALL SUBOPT_0x1C
00016a f409      	BRNE _0x121
00016b d262      	RCALL SUBOPT_0x1D
                 ;                    if (cou_r_pre <=-1)
                 _0x121:
00016c d275      	RCALL SUBOPT_0x21
00016d d281      	RCALL SUBOPT_0x24
00016e 17ea      	CP   R30,R26
00016f 07fb      	CPC  R31,R27
000170 f024      	BRLT _0x122
                 ;                        {
                 ;                        cou_r_pre =-1;
000171 d27d      	RCALL SUBOPT_0x24
000172 d27f      	RCALL SUBOPT_0x25
                 ;                        donvi=10;
000173 d283      	RCALL SUBOPT_0x26
                 ;                        chuc=10;
                 ;                        tram=10;
000174 d259      	RCALL SUBOPT_0x1D
                 ;                        }
                 ;                    }
                 _0x122:
                 ;                }
                 _0x11A:
000175 cfde      	RJMP _0x117
                 _0x119:
                 ;            }
                 ; /////////////////////////////////////////////////////////////////////
                 ;        if (d_type ==2)
                 _0x114:
000176 d286      	RCALL SUBOPT_0x27
000177 f509      	BRNE _0x123
                 ;            {
                 ;            cou_1s=0;
000178 d28a      	RCALL SUBOPT_0x28
                 ;            cou_g_pre--;
                 ;            tram  = cou_g_pre/100;
                 ;            chuc  = (cou_g_pre-tram*100)/10;
                 ;            donvi = (cou_g_pre%10)&0x0f;
                 ;
                 ;            if (chuc == 0) chuc=10;
000179 f409      	BRNE _0x124
00017a d272      	RCALL SUBOPT_0x23
                 ;            if (tram == 0) tram=10;
                 _0x124:
00017b d24c      	RCALL SUBOPT_0x1C
00017c f409      	BRNE _0x125
00017d d250      	RCALL SUBOPT_0x1D
                 ;            while(d_type ==2)
                 _0x125:
                 _0x126:
00017e d27e      	RCALL SUBOPT_0x27
00017f f4c9      	BRNE _0x128
                 ;                {
                 ;                if (cou_1s >=40)
000180 d253      	RCALL SUBOPT_0x1E
000181 f0b4      	BRLT _0x129
                 ;                    {
                 ;                    cou_1s =0;
000182 d280      	RCALL SUBOPT_0x28
                 ;                    cou_g_pre--;
                 ;                    tram  = cou_g_pre/100;
                 ;                    chuc  = (cou_g_pre-tram*100)/10;
                 ;                    donvi = (cou_g_pre%10)&0x0f;
                 ;
                 ;                    if (chuc == 0){ if (cou_g_pre > 99) chuc = 0; else chuc = 10; }
000183 f441      	BRNE _0x12A
000184 d2b3      	RCALL SUBOPT_0x29
000185 36a4      	CPI  R26,LOW(0x64)
000186 e0e0      	LDI  R30,HIGH(0x64)
000187 07be      	CPC  R27,R30
000188 f014      	BRLT _0x12B
000189 d25d      	RCALL SUBOPT_0x22
00018a c001      	RJMP _0x12C
                 _0x12B:
00018b d261      	RCALL SUBOPT_0x23
                 _0x12C:
                 ;                    if (tram == 0) tram=10;
                 _0x12A:
00018c d23b      	RCALL SUBOPT_0x1C
00018d f409      	BRNE _0x12D
00018e d23f      	RCALL SUBOPT_0x1D
                 ;                    if (cou_g_pre <=-1)
                 _0x12D:
00018f d2a8      	RCALL SUBOPT_0x29
000190 d25e      	RCALL SUBOPT_0x24
000191 17ea      	CP   R30,R26
000192 07fb      	CPC  R31,R27
000193 f024      	BRLT _0x12E
                 ;                        {
                 ;                        cou_g_pre =-1;
000194 d25a      	RCALL SUBOPT_0x24
000195 d2a7      	RCALL SUBOPT_0x2A
                 ;                        donvi=10;
000196 d260      	RCALL SUBOPT_0x26
                 ;                        chuc=10;
                 ;                        tram=10;
000197 d236      	RCALL SUBOPT_0x1D
                 ;                        }
                 ;                    }
                 _0x12E:
                 ;                }
                 _0x129:
000198 cfe5      	RJMP _0x126
                 _0x128:
                 ;            }
                 ; /////////////////////////////////////////////////////////////////////
                 ;        if (d_type ==3)
                 _0x123:
000199 d2a8      	RCALL SUBOPT_0x2B
00019a f5a1      	BRNE _0x12F
                 ;            {
                 ;            cou_1s=0;
00019b d2ac      	RCALL SUBOPT_0x2C
                 ;            cou_y_pre--;
00019c d2b1      	RCALL SUBOPT_0x2D
                 ;            donvi = (cou_y_pre%10)&0x0f;
                 ;            chuc=10;
                 ;            tram=10;
00019d d230      	RCALL SUBOPT_0x1D
                 ;            while(d_type ==3)
                 _0x130:
00019e d2a3      	RCALL SUBOPT_0x2B
00019f f579      	BRNE _0x132
                 ;                {
                 ;                if (cou_y >440)
0001a0 d2c1      	RCALL SUBOPT_0x2E
0001a1 3ba9      	CPI  R26,LOW(0x1B9)
0001a2 e0e1      	LDI  R30,HIGH(0x1B9)
0001a3 07be      	CPC  R27,R30
0001a4 f0a4      	BRLT _0x133
                 ;                    {
                 ;                    reset_interupt01();
0001a5 dec8      	RCALL _reset_interupt01
                 ;                    cou_r =0; cou_g =0; cou_y =0;
0001a6 d2c0      	RCALL SUBOPT_0x2F
0001a7 d2c5      	RCALL SUBOPT_0x30
0001a8 d2ca      	RCALL SUBOPT_0x31
                 ;                    cou_dr =0;
0001a9 d2cf      	RCALL SUBOPT_0x32
                 ;                    cou_dg =0;
0001aa d2d4      	RCALL SUBOPT_0x33
                 ;                    cou_dy =0;
0001ab d2d9      	RCALL SUBOPT_0x34
                 ;                    cou_1s=0;
0001ac d29b      	RCALL SUBOPT_0x2C
                 ;                    d_type =0;
0001ad e0e0      	LDI  R30,LOW(0)
0001ae 93e0 0160 	STS  _d_type,R30
0001b0 93e0 0161 	STS  _d_type+1,R30
                 ;                    kds_cv =3;
0001b2 d227      	RCALL SUBOPT_0x1F
0001b3 93e0 0188 	STS  _kds_cv,R30
0001b5 93f0 0189 	STS  _kds_cv+1,R31
                 ;                    f_cv =1;
0001b7 9468      	SET
0001b8 f820      	BLD  R2,0
                 ;                    }
                 ;                if (cou_1s >=39)
                 _0x133:
0001b9 91a0 0178 	LDS  R26,_cou_1s
0001bb 91b0 0179 	LDS  R27,_cou_1s+1
0001bd 9797      	SBIW R26,39
0001be f07c      	BRLT _0x134
                 ;                    {
                 ;                    cou_1s =0;
0001bf d288      	RCALL SUBOPT_0x2C
                 ;                    cou_y_pre--;
0001c0 d28d      	RCALL SUBOPT_0x2D
                 ;                    donvi = (cou_y_pre%10)&0x0f;
                 ;                    chuc=10;
                 ;                    tram=10;
0001c1 d20c      	RCALL SUBOPT_0x1D
                 ;                    if (cou_y_pre <=-1)
0001c2 91a0 0182 	LDS  R26,_cou_y_pre
0001c4 91b0 0183 	LDS  R27,_cou_y_pre+1
0001c6 d228      	RCALL SUBOPT_0x24
0001c7 17ea      	CP   R30,R26
0001c8 07fb      	CPC  R31,R27
0001c9 f024      	BRLT _0x135
                 ;                        {
                 ;                        cou_y_pre =-1;
0001ca d224      	RCALL SUBOPT_0x24
0001cb d2bf      	RCALL SUBOPT_0x35
                 ;                        donvi=10;
0001cc d22a      	RCALL SUBOPT_0x26
                 ;                        chuc=10;
                 ;                        tram=10;
0001cd d200      	RCALL SUBOPT_0x1D
                 ;                        }
                 ;                    }
                 _0x135:
                 ;                }
                 _0x134:
0001ce cfcf      	RJMP _0x130
                 _0x132:
                 ;            }
                 ;    }
                 _0x12F:
0001cf 9508      	RET
                 ;
                 ;
                 ;// Timer 0 overflow interrupt service routine: overflow at 1ms
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0026 {
                 _timer0_ovf_isr:
0001d0 920a      	ST   -Y,R0
0001d1 921a      	ST   -Y,R1
0001d2 939a      	ST   -Y,R25
0001d3 93aa      	ST   -Y,R26
0001d4 93ba      	ST   -Y,R27
0001d5 93ea      	ST   -Y,R30
0001d6 93fa      	ST   -Y,R31
0001d7 b7ef      	IN   R30,SREG
0001d8 93ea      	ST   -Y,R30
                 ; 0000 0027 // Reinitialize Timer 0 value
                 ; 0000 0028 TCNT0=0x82;
0001d9 e8e2      	LDI  R30,LOW(130)
0001da bfe2      	OUT  0x32,R30
                 ; 0000 0029 // Place your code here
                 ; 0000 002A cou_lm++;
0001db e7ac      	LDI  R26,LOW(_cou_lm)
0001dc e0b1      	LDI  R27,HIGH(_cou_lm)
0001dd d2b2      	RCALL SUBOPT_0x36
                 ; 0000 002B 
                 ; 0000 002C if (cou_lm >=25){
0001de 91a0 017c 	LDS  R26,_cou_lm
0001e0 91b0 017d 	LDS  R27,_cou_lm+1
0001e2 9759      	SBIW R26,25
0001e3 f40c      	BRGE PC+2
0001e4 c082      	RJMP _0x136
                 ; 0000 002D     cou_lm =0;
0001e5 e0e0      	LDI  R30,LOW(0)
0001e6 93e0 017c 	STS  _cou_lm,R30
0001e8 93e0 017d 	STS  _cou_lm+1,R30
                 ; 0000 002E     //#asm("WDR");
                 ; 0000 002F     switch (d_type)
0001ea d158      	RCALL SUBOPT_0x7
                 ; 0000 0030             {
                 ; 0000 0031             case 1: cou_r++;
0001eb f551      	BRNE _0x13A
0001ec e7a2      	LDI  R26,LOW(_cou_r)
0001ed e0b1      	LDI  R27,HIGH(_cou_r)
0001ee d2a1      	RCALL SUBOPT_0x36
                 ; 0000 0032                     if ((li_r ==1)&&(li_g ==0))
0001ef 9bb1      	SBIS 0x16,1
0001f0 c005      	RJMP _0x13C
0001f1 e0a0      	LDI  R26,0
0001f2 99b2      	SBIC 0x16,2
0001f3 e0a1      	LDI  R26,1
0001f4 30a0      	CPI  R26,LOW(0x0)
0001f5 f009      	BREQ _0x13D
                 _0x13C:
0001f6 c00f      	RJMP _0x13B
                 _0x13D:
                 ; 0000 0033                         {
                 ; 0000 0034                         cou_dr++; d_type=2;
0001f7 e6aa      	LDI  R26,LOW(_cou_dr)
0001f8 e0b1      	LDI  R27,HIGH(_cou_dr)
0001f9 d296      	RCALL SUBOPT_0x36
0001fa 9731      	SBIW R30,1
0001fb e0e2      	LDI  R30,LOW(2)
0001fc e0f0      	LDI  R31,HIGH(2)
0001fd d298      	RCALL SUBOPT_0x37
                 ; 0000 0035                         if (kds_cv <=0) cou_r_pre =cou_r/40;
0001fe f034      	BRLT _0x13E
0001ff 91a0 0172 	LDS  R26,_cou_r
000201 91b0 0173 	LDS  R27,_cou_r+1
000203 d299      	RCALL SUBOPT_0x38
000204 d1ed      	RCALL SUBOPT_0x25
                 ; 0000 0036                         cou_r =0;
                 _0x13E:
000205 d261      	RCALL SUBOPT_0x2F
                 ; 0000 0037                         }
                 ; 0000 0038                     if (cou_dr >=5)
                 _0x13B:
000206 91a0 016a 	LDS  R26,_cou_dr
000208 91b0 016b 	LDS  R27,_cou_dr+1
00020a 9715      	SBIW R26,5
00020b f04c      	BRLT _0x13F
                 ; 0000 0039                         {cou_dr =0; f_red =cou_r_pre; }
00020c d26c      	RCALL SUBOPT_0x32
00020d 91e0 017e 	LDS  R30,_cou_r_pre
00020f 91f0 017f 	LDS  R31,_cou_r_pre+1
000211 93e0 0184 	STS  _f_red,R30
000213 93f0 0185 	STS  _f_red+1,R31
                 ; 0000 003A                     break;
                 _0x13F:
000215 c04e      	RJMP _0x139
                 ; 0000 003B             case 2: cou_g++;
                 _0x13A:
000216 d119      	RCALL SUBOPT_0x3
000217 f529      	BRNE _0x140
000218 e7a4      	LDI  R26,LOW(_cou_g)
000219 e0b1      	LDI  R27,HIGH(_cou_g)
00021a d275      	RCALL SUBOPT_0x36
                 ; 0000 003C                     if ((li_r ==1)&&(li_g ==1))
00021b 9bb1      	SBIS 0x16,1
00021c c002      	RJMP _0x142
00021d 99b2      	SBIC 0x16,2
00021e c001      	RJMP _0x143
                 _0x142:
00021f c00d      	RJMP _0x141
                 _0x143:
                 ; 0000 003D                         {
                 ; 0000 003E                         cou_dg++; d_type=3;
000220 e6ac      	LDI  R26,LOW(_cou_dg)
000221 e0b1      	LDI  R27,HIGH(_cou_dg)
000222 d26d      	RCALL SUBOPT_0x36
000223 d1b6      	RCALL SUBOPT_0x1F
000224 d271      	RCALL SUBOPT_0x37
                 ; 0000 003F                         if (kds_cv <=0) cou_g_pre =cou_g/40;
000225 f034      	BRLT _0x144
000226 91a0 0174 	LDS  R26,_cou_g
000228 91b0 0175 	LDS  R27,_cou_g+1
00022a d272      	RCALL SUBOPT_0x38
00022b d211      	RCALL SUBOPT_0x2A
                 ; 0000 0040                         cou_g =0;
                 _0x144:
00022c d240      	RCALL SUBOPT_0x30
                 ; 0000 0041                         }
                 ; 0000 0042                     if (cou_dg >=5)
                 _0x141:
00022d 91a0 016c 	LDS  R26,_cou_dg
00022f 91b0 016d 	LDS  R27,_cou_dg+1
000231 9715      	SBIW R26,5
000232 f04c      	BRLT _0x145
                 ; 0000 0043                         {cou_dg =0; f_gree =cou_g_pre; }
000233 d24b      	RCALL SUBOPT_0x33
000234 91e0 0180 	LDS  R30,_cou_g_pre
000236 91f0 0181 	LDS  R31,_cou_g_pre+1
000238 93e0 0186 	STS  _f_gree,R30
00023a 93f0 0187 	STS  _f_gree+1,R31
                 ; 0000 0044                     break;
                 _0x145:
00023c c027      	RJMP _0x139
                 ; 0000 0045             case 3: cou_y++;
                 _0x140:
00023d d0f6      	RCALL SUBOPT_0x4
00023e f529      	BRNE _0x139
00023f e7a6      	LDI  R26,LOW(_cou_y)
000240 e0b1      	LDI  R27,HIGH(_cou_y)
000241 d24e      	RCALL SUBOPT_0x36
                 ; 0000 0046                     if ((li_r ==0)&&(li_g ==1))
000242 e0a0      	LDI  R26,0
000243 99b1      	SBIC 0x16,1
000244 e0a1      	LDI  R26,1
000245 30a0      	CPI  R26,LOW(0x0)
000246 f411      	BRNE _0x148
000247 99b2      	SBIC 0x16,2
000248 c001      	RJMP _0x149
                 _0x148:
000249 c00b      	RJMP _0x147
                 _0x149:
                 ; 0000 0047                         {
                 ; 0000 0048                         cou_dy++; d_type=1;
00024a e6ae      	LDI  R26,LOW(_cou_dy)
00024b e0b1      	LDI  R27,HIGH(_cou_dy)
00024c d243      	RCALL SUBOPT_0x36
00024d e0e1      	LDI  R30,LOW(1)
00024e e0f0      	LDI  R31,HIGH(1)
00024f d246      	RCALL SUBOPT_0x37
                 ; 0000 0049                         if (kds_cv <=0) cou_y_pre =cou_y/40;
000250 f01c      	BRLT _0x14A
000251 d210      	RCALL SUBOPT_0x2E
000252 d24a      	RCALL SUBOPT_0x38
000253 d237      	RCALL SUBOPT_0x35
                 ; 0000 004A                         cou_y =0;
                 _0x14A:
000254 d21e      	RCALL SUBOPT_0x31
                 ; 0000 004B                         }
                 ; 0000 004C                     if (cou_dy >=5)
                 _0x147:
000255 91a0 016e 	LDS  R26,_cou_dy
000257 91b0 016f 	LDS  R27,_cou_dy+1
000259 9715      	SBIW R26,5
00025a f04c      	BRLT _0x14B
                 ; 0000 004D                         {cou_dy =0; f_yell =cou_y_pre; }
00025b d229      	RCALL SUBOPT_0x34
00025c 91e0 0182 	LDS  R30,_cou_y_pre
00025e 91f0 0183 	LDS  R31,_cou_y_pre+1
000260 93e0 017a 	STS  _f_yell,R30
000262 93f0 017b 	STS  _f_yell+1,R31
                 ; 0000 004E                     break;
                 _0x14B:
                 ; 0000 004F             }
                 _0x139:
                 ; 0000 0050         cou_1s++;
000264 e7a8      	LDI  R26,LOW(_cou_1s)
000265 e0b1      	LDI  R27,HIGH(_cou_1s)
000266 d229      	RCALL SUBOPT_0x36
                 ; 0000 0051     }
                 ; 0000 0052 
                 ; 0000 0053 }
                 _0x136:
000267 91e9      	LD   R30,Y+
000268 bfef      	OUT  SREG,R30
000269 91f9      	LD   R31,Y+
00026a 91e9      	LD   R30,Y+
00026b 91b9      	LD   R27,Y+
00026c 91a9      	LD   R26,Y+
00026d 9199      	LD   R25,Y+
00026e 9019      	LD   R1,Y+
00026f 9009      	LD   R0,Y+
000270 9518      	RETI
                 ;
                 ;// Timer1 overflow interrupt service routine: overflow at 1ms
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0057 {
                 _timer1_ovf_isr:
000271 920a      	ST   -Y,R0
000272 921a      	ST   -Y,R1
000273 92fa      	ST   -Y,R15
000274 936a      	ST   -Y,R22
000275 937a      	ST   -Y,R23
000276 938a      	ST   -Y,R24
000277 939a      	ST   -Y,R25
000278 93aa      	ST   -Y,R26
000279 93ba      	ST   -Y,R27
00027a 93ea      	ST   -Y,R30
00027b 93fa      	ST   -Y,R31
00027c b7ef      	IN   R30,SREG
00027d 93ea      	ST   -Y,R30
                 ; 0000 0058 // Reinitialize Timer1 value
                 ; 0000 0059 TCNT1H=0xFC17 >> 8;
00027e d0a0      	RCALL SUBOPT_0x0
                 ; 0000 005A TCNT1L=0xFC17 & 0xff;
                 ; 0000 005B // Place your code here
                 ; 0000 005C d_anod++;
00027f e6a8      	LDI  R26,LOW(_d_anod)
000280 e0b1      	LDI  R27,HIGH(_d_anod)
000281 d20e      	RCALL SUBOPT_0x36
                 ; 0000 005D dislay7seg();
000282 de44      	RCALL _dislay7seg
                 ; 0000 005E 
                 ; 0000 005F }
000283 91e9      	LD   R30,Y+
000284 bfef      	OUT  SREG,R30
000285 91f9      	LD   R31,Y+
000286 91e9      	LD   R30,Y+
000287 91b9      	LD   R27,Y+
000288 91a9      	LD   R26,Y+
000289 9199      	LD   R25,Y+
00028a 9189      	LD   R24,Y+
00028b 9179      	LD   R23,Y+
00028c 9169      	LD   R22,Y+
00028d 90f9      	LD   R15,Y+
00028e 9019      	LD   R1,Y+
00028f 9009      	LD   R0,Y+
000290 9518      	RETI
                 ;
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 0064 {
                 _main:
                 ; 0000 0065 
                 ; 0000 0066 // Input/Output Ports initialization
                 ; 0000 0067 // Port B initialization
                 ; 0000 0068 // Func7=In Func6=In Func5=Out Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0069 // State7=T State6=T State5=1 State4=T State3=T State2=T State1=T State0=T
                 ; 0000 006A PORTB=0x20;
000291 e2e0      	LDI  R30,LOW(32)
000292 bbe8      	OUT  0x18,R30
                 ; 0000 006B DDRB=0x20;
000293 bbe7      	OUT  0x17,R30
                 ; 0000 006C 
                 ; 0000 006D // Port C initialization
                 ; 0000 006E // Func6=In Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 006F // State6=T State5=1 State4=1 State3=1 State2=1 State1=1 State0=1
                 ; 0000 0070 PORTC=0x3F;
000294 e3ef      	LDI  R30,LOW(63)
000295 bbe5      	OUT  0x15,R30
                 ; 0000 0071 DDRC=0x3F;
000296 bbe4      	OUT  0x14,R30
                 ; 0000 0072 
                 ; 0000 0073 // Port D initialization
                 ; 0000 0074 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 0075 // State7=1 State6=1 State5=1 State4=1 State3=1 State2=1 State1=1 State0=1
                 ; 0000 0076 PORTD=0x00;
000297 e0e0      	LDI  R30,LOW(0)
000298 bbe2      	OUT  0x12,R30
                 ; 0000 0077 DDRD=0xFF;
000299 efef      	LDI  R30,LOW(255)
00029a bbe1      	OUT  0x11,R30
                 ; 0000 0078 
                 ; 0000 0079 if (li_r ==0) d_type=1; else if (li_g ==0) d_type=2; else d_type=3;
00029b 99b1      	SBIC 0x16,1
00029c c003      	RJMP _0x14C
00029d e0e1      	LDI  R30,LOW(1)
00029e e0f0      	LDI  R31,HIGH(1)
00029f c006      	RJMP _0x16C
                 _0x14C:
0002a0 99b2      	SBIC 0x16,2
0002a1 c003      	RJMP _0x14E
0002a2 e0e2      	LDI  R30,LOW(2)
0002a3 e0f0      	LDI  R31,HIGH(2)
0002a4 c001      	RJMP _0x16C
                 _0x14E:
0002a5 d134      	RCALL SUBOPT_0x1F
                 _0x16C:
0002a6 93e0 0160 	STS  _d_type,R30
0002a8 93f0 0161 	STS  _d_type+1,R31
                 ; 0000 007A 
                 ; 0000 007B set_interupt01();
0002aa ddb5      	RCALL _set_interupt01
                 ; 0000 007C 
                 ; 0000 007D while (1)
                 ; 0000 007E       {
                 ; 0000 007F       // Place your code here
                 ; 0000 0080       if(kds_cv <=0) { kds_cv =0; calculate();}
0002ab d1f5      	RCALL SUBOPT_0x39
0002ac f00c      	BRLT _0x153
0002ad d1f9      	RCALL SUBOPT_0x3A
                 ; 0000 0081 
                 ; 0000 0082       while(1)
                 _0x153:
                 _0x154:
                 ; 0000 0083         {
                 ; 0000 0084         if(kds_cv <=0) { kds_cv =0; calculate();}
0002ae d1f2      	RCALL SUBOPT_0x39
0002af f00c      	BRLT _0x157
0002b0 d1f6      	RCALL SUBOPT_0x3A
                 ; 0000 0085 
                 ; 0000 0086         if(kds_cv >1)
                 _0x157:
0002b1 91a0 0188 	LDS  R26,_kds_cv
0002b3 91b0 0189 	LDS  R27,_kds_cv+1
0002b5 9712      	SBIW R26,2
0002b6 f40c      	BRGE PC+2
0002b7 c065      	RJMP _0x158
                 ; 0000 0087         {
                 ; 0000 0088         while(f_cv ==1)
                 _0x159:
0002b8 fe20      	SBRS R2,0
0002b9 c01e      	RJMP _0x15B
                 ; 0000 0089             {
                 ; 0000 008A             if ((li_r ==0)|(li_g ==0))
0002ba e0a0      	LDI  R26,0
0002bb 99b1      	SBIC 0x16,1
0002bc e0a1      	LDI  R26,1
0002bd d1ef      	RCALL SUBOPT_0x3B
0002be 2e0e      	MOV  R0,R30
0002bf e0a0      	LDI  R26,0
0002c0 99b2      	SBIC 0x16,2
0002c1 e0a1      	LDI  R26,1
0002c2 d1ea      	RCALL SUBOPT_0x3B
0002c3 29e0      	OR   R30,R0
0002c4 f091      	BREQ _0x15C
                 ; 0000 008B                 {
                 ; 0000 008C                 set_interupt01();
0002c5 dd9a      	RCALL _set_interupt01
                 ; 0000 008D                 f_cv=0;
0002c6 94e8      	CLT
0002c7 f820      	BLD  R2,0
                 ; 0000 008E                 if (li_r ==0) d_type=1; else if (li_g ==0) d_type=2; else d_type=3;
0002c8 99b1      	SBIC 0x16,1
0002c9 c003      	RJMP _0x15D
0002ca e0e1      	LDI  R30,LOW(1)
0002cb e0f0      	LDI  R31,HIGH(1)
0002cc c006      	RJMP _0x16D
                 _0x15D:
0002cd 99b2      	SBIC 0x16,2
0002ce c003      	RJMP _0x15F
0002cf e0e2      	LDI  R30,LOW(2)
0002d0 e0f0      	LDI  R31,HIGH(2)
0002d1 c001      	RJMP _0x16D
                 _0x15F:
0002d2 d107      	RCALL SUBOPT_0x1F
                 _0x16D:
0002d3 93e0 0160 	STS  _d_type,R30
0002d5 93f0 0161 	STS  _d_type+1,R31
                 ; 0000 008F                 }
                 ; 0000 0090             }
                 _0x15C:
0002d7 cfe0      	RJMP _0x159
                 _0x15B:
                 ; 0000 0091         for(i=0; i <2; i++)
0002d8 e0e0      	LDI  R30,LOW(0)
0002d9 93e0 0170 	STS  _i,R30
0002db 93e0 0171 	STS  _i+1,R30
                 _0x162:
0002dd 91a0 0170 	LDS  R26,_i
0002df 91b0 0171 	LDS  R27,_i+1
0002e1 9712      	SBIW R26,2
0002e2 f5ac      	BRGE _0x163
                 ; 0000 0092         {
                 ; 0000 0093         gree =0; yell =0; red =0;
0002e3 94e8      	CLT
0002e4 f821      	BLD  R2,1
0002e5 f822      	BLD  R2,2
0002e6 f823      	BLD  R2,3
                 ; 0000 0094         cou_r_pre =f_red;
0002e7 91e0 0184 	LDS  R30,_f_red
0002e9 91f0 0185 	LDS  R31,_f_red+1
0002eb d106      	RCALL SUBOPT_0x25
                 ; 0000 0095         cou_g_pre =f_gree;
0002ec 91e0 0186 	LDS  R30,_f_gree
0002ee 91f0 0187 	LDS  R31,_f_gree+1
0002f0 d14c      	RCALL SUBOPT_0x2A
                 ; 0000 0096         cou_y_pre =f_yell;
0002f1 91e0 017a 	LDS  R30,_f_yell
0002f3 91f0 017b 	LDS  R31,_f_yell+1
0002f5 d195      	RCALL SUBOPT_0x35
                 ; 0000 0097         while ((gree ==0)&(yell ==0)&(red ==0))
                 _0x164:
0002f6 e0a0      	LDI  R26,0
0002f7 fc21      	SBRC R2,1
0002f8 e0a1      	LDI  R26,1
0002f9 d1b3      	RCALL SUBOPT_0x3B
0002fa 2e0e      	MOV  R0,R30
0002fb e0a0      	LDI  R26,0
0002fc fc22      	SBRC R2,2
0002fd e0a1      	LDI  R26,1
0002fe d1ae      	RCALL SUBOPT_0x3B
0002ff 220e      	AND  R0,R30
000300 e0a0      	LDI  R26,0
000301 fc23      	SBRC R2,3
000302 e0a1      	LDI  R26,1
000303 d1a9      	RCALL SUBOPT_0x3B
000304 21e0      	AND  R30,R0
000305 f071      	BREQ _0x166
                 ; 0000 0098             {
                 ; 0000 0099             if (d_type ==1) red =1;
000306 d079      	RCALL SUBOPT_0x18
000307 f411      	BRNE _0x167
000308 9468      	SET
000309 f823      	BLD  R2,3
                 ; 0000 009A             if (d_type ==2)    gree =1;
                 _0x167:
00030a d0f2      	RCALL SUBOPT_0x27
00030b f411      	BRNE _0x168
00030c 9468      	SET
00030d f821      	BLD  R2,1
                 ; 0000 009B             if (d_type ==3) yell =1;
                 _0x168:
00030e d133      	RCALL SUBOPT_0x2B
00030f f411      	BRNE _0x169
000310 9468      	SET
000311 f822      	BLD  R2,2
                 ; 0000 009C             calculate();
                 _0x169:
000312 de38      	RCALL _calculate
                 ; 0000 009D             }
000313 cfe2      	RJMP _0x164
                 _0x166:
                 ; 0000 009E         }
000314 e7a0      	LDI  R26,LOW(_i)
000315 e0b1      	LDI  R27,HIGH(_i)
000316 d179      	RCALL SUBOPT_0x36
000317 cfc5      	RJMP _0x162
                 _0x163:
                 ; 0000 009F         kds_cv =0;
000318 e0e0      	LDI  R30,LOW(0)
000319 93e0 0188 	STS  _kds_cv,R30
00031b 93e0 0189 	STS  _kds_cv+1,R30
                 ; 0000 00A0         }
                 ; 0000 00A1 
                 ; 0000 00A2       }
                 _0x158:
00031d cf90      	RJMP _0x154
                 ; 0000 00A3     }
                 ; 0000 00A4 
                 ; 0000 00A5 }
                 _0x16A:
00031e cfff      	RJMP _0x16A
                 
                 	.DSEG
                 _d_type:
000160           	.BYTE 0x2
                 _donvi:
000162           	.BYTE 0x2
                 _chuc:
000164           	.BYTE 0x2
                 _tram:
000166           	.BYTE 0x2
                 _d_anod:
000168           	.BYTE 0x2
                 _cou_dr:
00016a           	.BYTE 0x2
                 _cou_dg:
00016c           	.BYTE 0x2
                 _cou_dy:
00016e           	.BYTE 0x2
                 _i:
000170           	.BYTE 0x2
                 _cou_r:
000172           	.BYTE 0x2
                 _cou_g:
000174           	.BYTE 0x2
                 _cou_y:
000176           	.BYTE 0x2
                 _cou_1s:
000178           	.BYTE 0x2
                 _f_yell:
00017a           	.BYTE 0x2
                 _cou_lm:
00017c           	.BYTE 0x2
                 _cou_r_pre:
00017e           	.BYTE 0x2
                 _cou_g_pre:
000180           	.BYTE 0x2
                 _cou_y_pre:
000182           	.BYTE 0x2
                 _f_red:
000184           	.BYTE 0x2
                 _f_gree:
000186           	.BYTE 0x2
                 _kds_cv:
000188           	.BYTE 0x2
                 _seg_array:
00018a           	.BYTE 0x16
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00031f efec      	LDI  R30,LOW(252)
000320 bded      	OUT  0x2D,R30
000321 e1e7      	LDI  R30,LOW(23)
000322 bdec      	OUT  0x2C,R30
000323 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000324 e0e0      	LDI  R30,LOW(0)
000325 bde7      	OUT  0x27,R30
000326 bde6      	OUT  0x26,R30
000327 bdeb      	OUT  0x2B,R30
000328 bdea      	OUT  0x2A,R30
000329 bde9      	OUT  0x29,R30
00032a bde8      	OUT  0x28,R30
00032b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
00032c 30e1      	CPI  R30,LOW(0x1)
00032d e0a0      	LDI  R26,HIGH(0x1)
00032e 07fa      	CPC  R31,R26
00032f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
000330 30e2      	CPI  R30,LOW(0x2)
000331 e0a0      	LDI  R26,HIGH(0x2)
000332 07fa      	CPC  R31,R26
000333 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000334 30e3      	CPI  R30,LOW(0x3)
000335 e0a0      	LDI  R26,HIGH(0x3)
000336 07fa      	CPC  R31,R26
000337 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5:
000338 98aa      	CBI  0x15,2
000339 98ab      	CBI  0x15,3
00033a 98a9      	CBI  0x15,1
00033b 98ad      	CBI  0x15,5
00033c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x6:
00033d 98ac      	CBI  0x15,4
00033e 98a8      	CBI  0x15,0
00033f 98c5      	CBI  0x18,5
000340 e0ea      	LDI  R30,LOW(10)
000341 93ea      	ST   -Y,R30
000342 cd3b      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000343 91e0 0160 	LDS  R30,_d_type
000345 91f0 0161 	LDS  R31,_d_type+1
000347 cfe4      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:79 WORDS
                 SUBOPT_0x8:
000348 91a0 0168 	LDS  R26,_d_anod
00034a 91b0 0169 	LDS  R27,_d_anod+1
00034c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x9:
00034d e0e1      	LDI  R30,LOW(1)
00034e e0f0      	LDI  R31,HIGH(1)
00034f 93e0 0168 	STS  _d_anod,R30
000351 93f0 0169 	STS  _d_anod+1,R31
000353 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
000354 dff3      	RCALL SUBOPT_0x8
000355 9713      	SBIW R26,3
000356 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
000357 98a8      	CBI  0x15,0
000358 98c5      	CBI  0x18,5
000359 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC:
00035a 91e0 0162 	LDS  R30,_donvi
00035c 93ea      	ST   -Y,R30
00035d cd20      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
00035e dfe9      	RCALL SUBOPT_0x8
00035f 9714      	SBIW R26,4
000360 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000361 dfe6      	RCALL SUBOPT_0x8
000362 9716      	SBIW R26,6
000363 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000364 91e0 0164 	LDS  R30,_chuc
000366 93ea      	ST   -Y,R30
000367 cd16      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000368 dfdf      	RCALL SUBOPT_0x8
000369 9717      	SBIW R26,7
00036a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
00036b dfdc      	RCALL SUBOPT_0x8
00036c 9719      	SBIW R26,9
00036d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
00036e 91e0 0166 	LDS  R30,_tram
000370 93ea      	ST   -Y,R30
000371 cd0c      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000372 dfd5      	RCALL SUBOPT_0x8
000373 971a      	SBIW R26,10
000374 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x14:
000375 98aa      	CBI  0x15,2
000376 98ac      	CBI  0x15,4
000377 cfdf      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
000378 98a9      	CBI  0x15,1
000379 98ad      	CBI  0x15,5
00037a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
00037b 98ab      	CBI  0x15,3
00037c cffb      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00037d e0ea      	LDI  R30,LOW(10)
00037e 93ea      	ST   -Y,R30
00037f ccfe      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x18:
000380 91a0 0160 	LDS  R26,_d_type
000382 91b0 0161 	LDS  R27,_d_type+1
000384 9711      	SBIW R26,1
000385 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:58 WORDS
                 SUBOPT_0x19:
000386 e0e0      	LDI  R30,LOW(0)
000387 93e0 0178 	STS  _cou_1s,R30
000389 93e0 0179 	STS  _cou_1s+1,R30
00038b e7ae      	LDI  R26,LOW(_cou_r_pre)
00038c e0b1      	LDI  R27,HIGH(_cou_r_pre)
00038d 91ed      	LD   R30,X+
00038e 91fd      	LD   R31,X+
00038f 9731      	SBIW R30,1
000390 93fe      	ST   -X,R31
000391 93ee      	ST   -X,R30
000392 91a0 017e 	LDS  R26,_cou_r_pre
000394 91b0 017f 	LDS  R27,_cou_r_pre+1
000396 e6e4      	LDI  R30,LOW(100)
000397 e0f0      	LDI  R31,HIGH(100)
000398 d140      	RCALL __DIVW21
000399 93e0 0166 	STS  _tram,R30
00039b 93f0 0167 	STS  _tram+1,R31
00039d e6a4      	LDI  R26,LOW(100)
00039e e0b0      	LDI  R27,HIGH(100)
00039f d121      	RCALL __MULW12
0003a0 91a0 017e 	LDS  R26,_cou_r_pre
0003a2 91b0 017f 	LDS  R27,_cou_r_pre+1
0003a4 1bae      	SUB  R26,R30
0003a5 0bbf      	SBC  R27,R31
0003a6 e0ea      	LDI  R30,LOW(10)
0003a7 e0f0      	LDI  R31,HIGH(10)
0003a8 d130      	RCALL __DIVW21
0003a9 93e0 0164 	STS  _chuc,R30
0003ab 93f0 0165 	STS  _chuc+1,R31
0003ad 91a0 017e 	LDS  R26,_cou_r_pre
0003af 91b0 017f 	LDS  R27,_cou_r_pre+1
0003b1 e0ea      	LDI  R30,LOW(10)
0003b2 e0f0      	LDI  R31,HIGH(10)
0003b3 d12a      	RCALL __MODW21
0003b4 70ef      	ANDI R30,LOW(0xF)
0003b5 70f0      	ANDI R31,HIGH(0xF)
0003b6 93e0 0162 	STS  _donvi,R30
0003b8 93f0 0163 	STS  _donvi+1,R31
0003ba 91e0 0164 	LDS  R30,_chuc
0003bc 91f0 0165 	LDS  R31,_chuc+1
0003be 9730      	SBIW R30,0
0003bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x1A:
0003c0 e0ea      	LDI  R30,LOW(10)
0003c1 e0f0      	LDI  R31,HIGH(10)
0003c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x1B:
0003c3 93e0 0164 	STS  _chuc,R30
0003c5 93f0 0165 	STS  _chuc+1,R31
0003c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1C:
0003c8 91e0 0166 	LDS  R30,_tram
0003ca 91f0 0167 	LDS  R31,_tram+1
0003cc 9730      	SBIW R30,0
0003cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x1D:
0003ce dff1      	RCALL SUBOPT_0x1A
0003cf 93e0 0166 	STS  _tram,R30
0003d1 93f0 0167 	STS  _tram+1,R31
0003d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
0003d4 91a0 0178 	LDS  R26,_cou_1s
0003d6 91b0 0179 	LDS  R27,_cou_1s+1
0003d8 9798      	SBIW R26,40
0003d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1F:
0003da e0e3      	LDI  R30,LOW(3)
0003db e0f0      	LDI  R31,HIGH(3)
0003dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
0003dd 93e0 0160 	STS  _d_type,R30
0003df 93f0 0161 	STS  _d_type+1,R31
0003e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
0003e2 91a0 017e 	LDS  R26,_cou_r_pre
0003e4 91b0 017f 	LDS  R27,_cou_r_pre+1
0003e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x22:
0003e7 e0e0      	LDI  R30,LOW(0)
0003e8 93e0 0164 	STS  _chuc,R30
0003ea 93e0 0165 	STS  _chuc+1,R30
0003ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
0003ed dfd2      	RCALL SUBOPT_0x1A
0003ee cfd4      	RJMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
0003ef efef      	LDI  R30,LOW(65535)
0003f0 efff      	LDI  R31,HIGH(65535)
0003f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x25:
0003f2 93e0 017e 	STS  _cou_r_pre,R30
0003f4 93f0 017f 	STS  _cou_r_pre+1,R31
0003f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x26:
0003f7 dfc8      	RCALL SUBOPT_0x1A
0003f8 93e0 0162 	STS  _donvi,R30
0003fa 93f0 0163 	STS  _donvi+1,R31
0003fc cff0      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x27:
0003fd 91a0 0160 	LDS  R26,_d_type
0003ff 91b0 0161 	LDS  R27,_d_type+1
000401 9712      	SBIW R26,2
000402 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x28:
000403 e0e0      	LDI  R30,LOW(0)
000404 93e0 0178 	STS  _cou_1s,R30
000406 93e0 0179 	STS  _cou_1s+1,R30
000408 e8a0      	LDI  R26,LOW(_cou_g_pre)
000409 e0b1      	LDI  R27,HIGH(_cou_g_pre)
00040a 91ed      	LD   R30,X+
00040b 91fd      	LD   R31,X+
00040c 9731      	SBIW R30,1
00040d 93fe      	ST   -X,R31
00040e 93ee      	ST   -X,R30
00040f 91a0 0180 	LDS  R26,_cou_g_pre
000411 91b0 0181 	LDS  R27,_cou_g_pre+1
000413 e6e4      	LDI  R30,LOW(100)
000414 e0f0      	LDI  R31,HIGH(100)
000415 d0c3      	RCALL __DIVW21
000416 93e0 0166 	STS  _tram,R30
000418 93f0 0167 	STS  _tram+1,R31
00041a e6a4      	LDI  R26,LOW(100)
00041b e0b0      	LDI  R27,HIGH(100)
00041c d0a4      	RCALL __MULW12
00041d 91a0 0180 	LDS  R26,_cou_g_pre
00041f 91b0 0181 	LDS  R27,_cou_g_pre+1
000421 1bae      	SUB  R26,R30
000422 0bbf      	SBC  R27,R31
000423 df9c      	RCALL SUBOPT_0x1A
000424 d0b4      	RCALL __DIVW21
000425 df9d      	RCALL SUBOPT_0x1B
000426 91a0 0180 	LDS  R26,_cou_g_pre
000428 91b0 0181 	LDS  R27,_cou_g_pre+1
00042a df95      	RCALL SUBOPT_0x1A
00042b d0b2      	RCALL __MODW21
00042c 70ef      	ANDI R30,LOW(0xF)
00042d 70f0      	ANDI R31,HIGH(0xF)
00042e 93e0 0162 	STS  _donvi,R30
000430 93f0 0163 	STS  _donvi+1,R31
000432 91e0 0164 	LDS  R30,_chuc
000434 91f0 0165 	LDS  R31,_chuc+1
000436 9730      	SBIW R30,0
000437 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000438 91a0 0180 	LDS  R26,_cou_g_pre
00043a 91b0 0181 	LDS  R27,_cou_g_pre+1
00043c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2A:
00043d 93e0 0180 	STS  _cou_g_pre,R30
00043f 93f0 0181 	STS  _cou_g_pre+1,R31
000441 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2B:
000442 91a0 0160 	LDS  R26,_d_type
000444 91b0 0161 	LDS  R27,_d_type+1
000446 9713      	SBIW R26,3
000447 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C:
000448 e0e0      	LDI  R30,LOW(0)
000449 93e0 0178 	STS  _cou_1s,R30
00044b 93e0 0179 	STS  _cou_1s+1,R30
00044d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2D:
00044e e8a2      	LDI  R26,LOW(_cou_y_pre)
00044f e0b1      	LDI  R27,HIGH(_cou_y_pre)
000450 91ed      	LD   R30,X+
000451 91fd      	LD   R31,X+
000452 9731      	SBIW R30,1
000453 93fe      	ST   -X,R31
000454 93ee      	ST   -X,R30
000455 91a0 0182 	LDS  R26,_cou_y_pre
000457 91b0 0183 	LDS  R27,_cou_y_pre+1
000459 df66      	RCALL SUBOPT_0x1A
00045a d083      	RCALL __MODW21
00045b 70ef      	ANDI R30,LOW(0xF)
00045c 70f0      	ANDI R31,HIGH(0xF)
00045d 93e0 0162 	STS  _donvi,R30
00045f 93f0 0163 	STS  _donvi+1,R31
000461 cf8b      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
000462 91a0 0176 	LDS  R26,_cou_y
000464 91b0 0177 	LDS  R27,_cou_y+1
000466 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2F:
000467 e0e0      	LDI  R30,LOW(0)
000468 93e0 0172 	STS  _cou_r,R30
00046a 93e0 0173 	STS  _cou_r+1,R30
00046c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x30:
00046d e0e0      	LDI  R30,LOW(0)
00046e 93e0 0174 	STS  _cou_g,R30
000470 93e0 0175 	STS  _cou_g+1,R30
000472 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
000473 e0e0      	LDI  R30,LOW(0)
000474 93e0 0176 	STS  _cou_y,R30
000476 93e0 0177 	STS  _cou_y+1,R30
000478 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
000479 e0e0      	LDI  R30,LOW(0)
00047a 93e0 016a 	STS  _cou_dr,R30
00047c 93e0 016b 	STS  _cou_dr+1,R30
00047e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x33:
00047f e0e0      	LDI  R30,LOW(0)
000480 93e0 016c 	STS  _cou_dg,R30
000482 93e0 016d 	STS  _cou_dg+1,R30
000484 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x34:
000485 e0e0      	LDI  R30,LOW(0)
000486 93e0 016e 	STS  _cou_dy,R30
000488 93e0 016f 	STS  _cou_dy+1,R30
00048a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x35:
00048b 93e0 0182 	STS  _cou_y_pre,R30
00048d 93f0 0183 	STS  _cou_y_pre+1,R31
00048f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x36:
000490 91ed      	LD   R30,X+
000491 91fd      	LD   R31,X+
000492 9631      	ADIW R30,1
000493 93fe      	ST   -X,R31
000494 93ee      	ST   -X,R30
000495 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x37:
000496 df46      	RCALL SUBOPT_0x20
000497 91a0 0188 	LDS  R26,_kds_cv
000499 91b0 0189 	LDS  R27,_kds_cv+1
00049b d05e      	RCALL __CPW02
00049c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x38:
00049d e2e8      	LDI  R30,LOW(40)
00049e e0f0      	LDI  R31,HIGH(40)
00049f d039      	RCALL __DIVW21
0004a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39:
0004a1 91a0 0188 	LDS  R26,_kds_cv
0004a3 91b0 0189 	LDS  R27,_kds_cv+1
0004a5 d054      	RCALL __CPW02
0004a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
0004a7 e0e0      	LDI  R30,LOW(0)
0004a8 93e0 0188 	STS  _kds_cv,R30
0004aa 93e0 0189 	STS  _kds_cv+1,R30
0004ac cc9e      	RJMP _calculate
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B:
0004ad e0e0      	LDI  R30,LOW(0)
0004ae d005      	RCALL __EQB12
0004af 9508      	RET
                 
                 
                 	.CSEG
                 __ANEGW1:
0004b0 95f1      	NEG  R31
0004b1 95e1      	NEG  R30
0004b2 40f0      	SBCI R31,0
0004b3 9508      	RET
                 
                 __EQB12:
0004b4 17ea      	CP   R30,R26
0004b5 e0e1      	LDI  R30,1
0004b6 f009      	BREQ __EQB12T
0004b7 27ee      	CLR  R30
                 __EQB12T:
0004b8 9508      	RET
                 
                 __MULW12U:
0004b9 9ffa      	MUL  R31,R26
0004ba 2df0      	MOV  R31,R0
0004bb 9feb      	MUL  R30,R27
0004bc 0df0      	ADD  R31,R0
0004bd 9fea      	MUL  R30,R26
0004be 2de0      	MOV  R30,R0
0004bf 0df1      	ADD  R31,R1
0004c0 9508      	RET
                 
                 __MULW12:
0004c1 d02a      	RCALL __CHKSIGNW
0004c2 dff6      	RCALL __MULW12U
0004c3 f40e      	BRTC __MULW121
0004c4 dfeb      	RCALL __ANEGW1
                 __MULW121:
0004c5 9508      	RET
                 
                 __DIVW21U:
0004c6 2400      	CLR  R0
0004c7 2411      	CLR  R1
0004c8 e190      	LDI  R25,16
                 __DIVW21U1:
0004c9 0faa      	LSL  R26
0004ca 1fbb      	ROL  R27
0004cb 1c00      	ROL  R0
0004cc 1c11      	ROL  R1
0004cd 1a0e      	SUB  R0,R30
0004ce 0a1f      	SBC  R1,R31
0004cf f418      	BRCC __DIVW21U2
0004d0 0e0e      	ADD  R0,R30
0004d1 1e1f      	ADC  R1,R31
0004d2 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0004d3 60a1      	SBR  R26,1
                 __DIVW21U3:
0004d4 959a      	DEC  R25
0004d5 f799      	BRNE __DIVW21U1
0004d6 01fd      	MOVW R30,R26
0004d7 01d0      	MOVW R26,R0
0004d8 9508      	RET
                 
                 __DIVW21:
0004d9 d012      	RCALL __CHKSIGNW
0004da dfeb      	RCALL __DIVW21U
0004db f40e      	BRTC __DIVW211
0004dc dfd3      	RCALL __ANEGW1
                 __DIVW211:
0004dd 9508      	RET
                 
                 __MODW21:
0004de 94e8      	CLT
0004df ffb7      	SBRS R27,7
0004e0 c004      	RJMP __MODW211
0004e1 95a0      	COM  R26
0004e2 95b0      	COM  R27
0004e3 9611      	ADIW R26,1
0004e4 9468      	SET
                 __MODW211:
0004e5 fdf7      	SBRC R31,7
0004e6 dfc9      	RCALL __ANEGW1
0004e7 dfde      	RCALL __DIVW21U
0004e8 01fd      	MOVW R30,R26
0004e9 f40e      	BRTC __MODW212
0004ea dfc5      	RCALL __ANEGW1
                 __MODW212:
0004eb 9508      	RET
                 
                 __CHKSIGNW:
0004ec 94e8      	CLT
0004ed fff7      	SBRS R31,7
0004ee c002      	RJMP __CHKSW1
0004ef dfc0      	RCALL __ANEGW1
0004f0 9468      	SET
                 __CHKSW1:
0004f1 ffb7      	SBRS R27,7
0004f2 c006      	RJMP __CHKSW2
0004f3 95a0      	COM  R26
0004f4 95b0      	COM  R27
0004f5 9611      	ADIW R26,1
0004f6 f800      	BLD  R0,0
0004f7 9403      	INC  R0
0004f8 fa00      	BST  R0,0
                 __CHKSW2:
0004f9 9508      	RET
                 
                 __CPW02:
0004fa 2400      	CLR  R0
0004fb 160a      	CP   R0,R26
0004fc 060b      	CPC  R0,R27
0004fd 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  27 r1 :  10 r2 :  12 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   2 
r24:   9 r25:   8 r26: 124 r27:  63 r28:   2 r29:   1 r30: 244 r31:  91 
x  :  19 y  :  46 z  :   7 
Registers used: 17 out of 35 (48.6%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :   4 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   9 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   5 
brge  :   6 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :  42 brmi  :   0 brne  :  39 brpl  :   0 brsh  :   0 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :  23 
cbr   :   0 clc   :   0 clh   :   0 cli   :   2 cln   :   0 clr   :   6 
cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :   4 cp    :   5 
cpc   :  17 cpi   :  15 cpse  :   0 dec   :   2 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   2 
inc   :   1 ld    :  29 ldd   :   0 ldi   : 138 lds   :  88 lpm   :   7 
lsl   :   1 lsr   :   0 mov   :   4 movw  :   6 mul   :   3 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   0 out   :  40 
pop   :   0 push  :   0 rcall : 229 ret   :  62 reti  :   2 rjmp  :  93 
rol   :   3 ror   :   0 sbc   :   3 sbci  :   1 sbi   :   7 sbic  :  11 
sbis  :   3 sbiw  :  29 sbr   :   1 sbrc  :   4 sbrs  :   4 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   6 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  36 std   :   0 
sts   :  70 sub   :   3 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 

Instructions used: 54 out of 114 (47.4%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0009fc   2496     60   2556    8192  31.2%
[.dseg] 0x000060 0x0001a0      0     64     64    1119   5.7%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
