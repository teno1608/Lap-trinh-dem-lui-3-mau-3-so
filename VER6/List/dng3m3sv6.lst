
AVRASM ver. 2.1.30  D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER6\List\dng3m3sv6.asm Thu Dec 10 10:07:58 2015

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c030      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c1bd      	RJMP _timer0_ovf_isr
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000013 0000      	.DW  0x0000
                 
                 _0x3:
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER6\List\dng3m3sv6.asm(1088): warning: .cseg .db misalignment - padding zero byte
000014 007c      	.DB  0x7C
                 _0x4:
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER6\List\dng3m3sv6.asm(1090): warning: .cseg .db misalignment - padding zero byte
000015 007c      	.DB  0x7C
                 _0x5:
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER6\List\dng3m3sv6.asm(1092): warning: .cseg .db misalignment - padding zero byte
000016 000a      	.DB  0xA
                 _0x6:
000017 003f
000018 0006
000019 005b
00001a 004f      	.DB  0x3F,0x0,0x6,0x0,0x5B,0x0,0x4F,0x0
00001b 0066
00001c 006d
00001d 007d
00001e 0007      	.DB  0x66,0x0,0x6D,0x0,0x7D,0x0,0x7,0x0
00001f 007f
D:\Soft working\Lap trinh dem lui 3 mau 3 so\VER6\List\dng3m3sv6.asm(1096): warning: .cseg .db misalignment - padding zero byte
000020 006f      	.DB  0x7F,0x0,0x6F
                 
                 __GLOBAL_INI_TBL:
000021 0001      	.DW  0x01
000022 0002      	.DW  0x02
000023 0026      	.DW  __REG_BIT_VARS*2
                 
000024 0001      	.DW  0x01
000025 0180      	.DW  _cou_r_pre
000026 0028      	.DW  _0x3*2
                 
000027 0001      	.DW  0x01
000028 0182      	.DW  _cou_g_pre
000029 002a      	.DW  _0x4*2
                 
00002a 0001      	.DW  0x01
00002b 0184      	.DW  _cou_y_pre
00002c 002c      	.DW  _0x5*2
                 
00002d 0013      	.DW  0x13
00002e 018c      	.DW  _seg_array
00002f 002e      	.DW  _0x6*2
                 
                 _0xFFFFFFFF:
000030 0000      	.DW  0
                 
                 __RESET:
000031 94f8      	CLI
000032 27ee      	CLR  R30
000033 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000034 e0f1      	LDI  R31,1
000035 bffb      	OUT  GICR,R31
000036 bfeb      	OUT  GICR,R30
000037 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000038 e1f8      	LDI  R31,0x18
000039 bdf1      	OUT  WDTCR,R31
00003a bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00003b e08d      	LDI  R24,(14-2)+1
00003c e0a2      	LDI  R26,2
00003d 27bb      	CLR  R27
                 __CLEAR_REG:
00003e 93ed      	ST   X+,R30
00003f 958a      	DEC  R24
000040 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000041 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000042 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000043 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000044 93ed      	ST   X+,R30
000045 9701      	SBIW R24,1
000046 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000047 e4e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000048 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000049 9185      	LPM  R24,Z+
00004a 9195      	LPM  R25,Z+
00004b 9700      	SBIW R24,0
00004c f061      	BREQ __GLOBAL_INI_END
00004d 91a5      	LPM  R26,Z+
00004e 91b5      	LPM  R27,Z+
00004f 9005      	LPM  R0,Z+
000050 9015      	LPM  R1,Z+
000051 01bf      	MOVW R22,R30
000052 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000053 9005      	LPM  R0,Z+
000054 920d      	ST   X+,R0
000055 9701      	SBIW R24,1
000056 f7e1      	BRNE __GLOBAL_INI_LOOP
000057 01fb      	MOVW R30,R22
000058 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000059 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00005a bfed      	OUT  SPL,R30
00005b e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005e e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005f c223      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega8
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;volatile int d_type=0, donvi, chuc, tram, d_anod=0, cou_dr=0, cou_dg=0, cou_dy=0, i=0;
                 ;volatile int cou_r=0, cou_g=0, cou_y=0, cou_1s=0, f_yell=0, cou_lm=0, cou_wd=0;
                 ;volatile int cou_r_pre=124, cou_g_pre=124, cou_y_pre=10, f_red=0, f_gree=0, kds_cv=0;
                 
                 	.DSEG
                 ;volatile bit f_cv=0, gree=0, yell=0, red=0;
                 ;
                 ;#define li_r PINB.1
                 ;#define li_g PINB.2
                 ;
                 ;#define leddch PORTC.0
                 ;#define ledxch PORTC.1
                 ;#define ledvdv PORTC.2
                 ;#define ledxdv PORTC.3
                 ;#define ledddv PORTC.4
                 ;#define ledxtr PORTC.5
                 ;#define leddtr PORTB.5
                 ;
                 ;#include <setup_interupt.c>
                 ;
                 ;
                 ;void set_interupt01(){
                 ; 0000 001F void set_interupt01(){
                 
                 	.CSEG
                 _set_interupt01:
                 ;
                 ;// Timer/Counter 0 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: 125.000 kHz
                 ;TCCR0=0x03;
000060 e0e3      	LDI  R30,LOW(3)
000061 bfe3      	OUT  0x33,R30
                 ;TCNT0=0x82;
000062 e8e2      	LDI  R30,LOW(130)
000063 d2ad      	RCALL SUBOPT_0x0
                 ;/*
                 ;// Timer/Counter 1 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: 1000.000 kHz
                 ;// Mode: Normal top=0xFFFF
                 ;// OC1A output: Discon.
                 ;// OC1B output: Discon.
                 ;// Noise Canceler: Off
                 ;// Input Capture on Falling Edge
                 ;// Timer1 Overflow Interrupt: On
                 ;// Input Capture Interrupt: Off
                 ;// Compare A Match Interrupt: Off
                 ;// Compare B Match Interrupt: Off
                 ;TCCR1A=0x00;
                 ;TCCR1B=0x02;
                 ;TCNT1H=0xf9;
                 ;TCNT1L=0xbf;
                 ;ICR1H=0x00;
                 ;ICR1L=0x00;
                 ;OCR1AH=0x00;
                 ;OCR1AL=0x00;
                 ;OCR1BH=0x00;
                 ;OCR1BL=0x00;
                 ;*/
                 ;// Timer/Counter 2 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: Timer2 Stopped
                 ;// Mode: Normal top=0xFF
                 ;// OC2 output: Disconnected
                 ;ASSR=0x00;
                 ;TCCR2=0x00;
                 ;TCNT2=0x00;
                 ;OCR2=0x00;
                 ;
                 ;// External Interrupt(s) initialization
                 ;// INT0: Off
                 ;// INT1: Off
                 ;MCUCR=0x00;
                 ;
                 ;// Timer(s)/Counter(s) Interrupt(s) initialization
                 ;TIMSK=0x01;
                 ;
                 ;// USART initialization
                 ;// USART disabled
                 ;UCSRB=0x00;
                 ;
                 ;// Analog Comparator initialization
                 ;// Analog Comparator: Off
                 ;// Analog Comparator Input Capture by Timer/Counter 1: Off
                 ;ACSR=0x80;
                 ;SFIOR=0x00;
                 ;
                 ;// ADC initialization
                 ;// ADC disabled
                 ;ADCSRA=0x00;
                 ;
                 ;// SPI initialization
                 ;// SPI disabled
                 ;SPCR=0x00;
                 ;
                 ;// TWI initialization
                 ;// TWI disabled
                 ;TWCR=0x00;
                 ;
                 ;// Watchdog Timer initialization
                 ;// Watchdog Timer Prescaler: OSC/32k
                 ;#pragma optsize-
                 ;WDTCR=0x19;
000064 e1e9      	LDI  R30,LOW(25)
000065 bde1      	OUT  0x21,R30
                 ;WDTCR=0x09;
000066 e0e9      	LDI  R30,LOW(9)
000067 bde1      	OUT  0x21,R30
                 ;#ifdef _OPTIMIZE_SIZE_
                 ;#pragma optsize+
                 ;#endif
                 ;
                 ;// Global enable interrupts
                 ;#asm("sei")
000068 9478      	sei
                 ;}
000069 9508      	RET
                 ;
                 ;void reset_interupt01(){
                 _reset_interupt01:
                 ;
                 ;// Timer/Counter 0 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: Timer 0 Stopped
                 ;TCCR0=0x00;
00006a e0e0      	LDI  R30,LOW(0)
00006b bfe3      	OUT  0x33,R30
                 ;TCNT0=0x00;
00006c d2a4      	RCALL SUBOPT_0x0
                 ;/*
                 ;// Timer/Counter 1 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: 1000.000 kHz
                 ;// Mode: Normal top=0xFFFF
                 ;// OC1A output: Discon.
                 ;// OC1B output: Discon.
                 ;// Noise Canceler: Off
                 ;// Input Capture on Falling Edge
                 ;// Timer1 Overflow Interrupt: On
                 ;// Input Capture Interrupt: Off
                 ;// Compare A Match Interrupt: Off
                 ;// Compare B Match Interrupt: Off
                 ;TCCR1A=0x00;
                 ;TCCR1B=0x02;
                 ;TCNT1H=0xf9;
                 ;TCNT1L=0xbf;
                 ;ICR1H=0x00;
                 ;ICR1L=0x00;
                 ;OCR1AH=0x00;
                 ;OCR1AL=0x00;
                 ;OCR1BH=0x00;
                 ;OCR1BL=0x00;
                 ;*/
                 ;// Timer/Counter 2 initialization
                 ;// Clock source: System Clock
                 ;// Clock value: Timer2 Stopped
                 ;// Mode: Normal top=0xFF
                 ;// OC2 output: Disconnected
                 ;ASSR=0x00;
                 ;TCCR2=0x00;
                 ;TCNT2=0x00;
                 ;OCR2=0x00;
                 ;
                 ;// External Interrupt(s) initialization
                 ;// INT0: Off
                 ;// INT1: Off
                 ;MCUCR=0x00;
                 ;
                 ;// Timer(s)/Counter(s) Interrupt(s) initialization
                 ;TIMSK=0x01;
                 ;
                 ;// USART initialization
                 ;// USART disabled
                 ;UCSRB=0x00;
                 ;
                 ;// Analog Comparator initialization
                 ;// Analog Comparator: Off
                 ;// Analog Comparator Input Capture by Timer/Counter 1: Off
                 ;ACSR=0x80;
                 ;SFIOR=0x00;
                 ;
                 ;// ADC initialization
                 ;// ADC disabled
                 ;ADCSRA=0x00;
                 ;
                 ;// SPI initialization
                 ;// SPI disabled
                 ;SPCR=0x00;
                 ;
                 ;// TWI initialization
                 ;// TWI disabled
                 ;TWCR=0x00;
                 ;
                 ;// Watchdog Timer initialization
                 ;// Watchdog Timer Prescaler: OSC/32k
                 ;#pragma optsize-
                 ;WDTCR=0x19;
00006d e1e9      	LDI  R30,LOW(25)
00006e bde1      	OUT  0x21,R30
                 ;WDTCR=0x09;
00006f e0e9      	LDI  R30,LOW(9)
000070 bde1      	OUT  0x21,R30
                 ;#ifdef _OPTIMIZE_SIZE_
                 ;#pragma optsize+
                 ;#endif
                 ;
                 ;// Global enable interrupts
                 ;#asm("sei")
000071 9478      	sei
                 ;}
000072 9508      	RET
                 ;#include <segdisplay.c>
                 ;
                 ;
                 ;// Define seg a >>> g PORTD
                 ;
                 ;int seg_array[11]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x00};
                 
                 	.DSEG
                 ;
                 ;void seg_display(char var7seg)
                 ; 0000 0020     {
                 
                 	.CSEG
                 _seg_display:
                 ;    switch (var7seg)
                 ;	var7seg -> Y+0
000073 81e8      	LD   R30,Y
000074 e0f0      	LDI  R31,0
                 ;        {
                 ;        case 0: PORTD=seg_array[0];
000075 9730      	SBIW R30,0
000076 f419      	BRNE _0xA
000077 91e0 018c 	LDS  R30,_seg_array
000079 c03f      	RJMP _0x16C
                 ;                break;
                 ;        case 1: PORTD=seg_array[1];
                 _0xA:
00007a d2a9      	RCALL SUBOPT_0x1
00007b f419      	BRNE _0xB
                +
00007c 91e0 018e+LDS R30 , _seg_array + ( 2 )
                 	__GETB1MN _seg_array,2
00007e c03a      	RJMP _0x16C
                 ;                break;
                 ;        case 2: PORTD=seg_array[2];
                 _0xB:
00007f d2a8      	RCALL SUBOPT_0x2
000080 f419      	BRNE _0xC
                +
000081 91e0 0190+LDS R30 , _seg_array + ( 4 )
                 	__GETB1MN _seg_array,4
000083 c035      	RJMP _0x16C
                 ;                break;
                 ;        case 3: PORTD=seg_array[3];
                 _0xC:
000084 d2a7      	RCALL SUBOPT_0x3
000085 f419      	BRNE _0xD
                +
000086 91e0 0192+LDS R30 , _seg_array + ( 6 )
                 	__GETB1MN _seg_array,6
000088 c030      	RJMP _0x16C
                 ;                break;
                 ;        case 4: PORTD=seg_array[4];
                 _0xD:
000089 30e4      	CPI  R30,LOW(0x4)
00008a e0a0      	LDI  R26,HIGH(0x4)
00008b 07fa      	CPC  R31,R26
00008c f419      	BRNE _0xE
                +
00008d 91e0 0194+LDS R30 , _seg_array + ( 8 )
                 	__GETB1MN _seg_array,8
00008f c029      	RJMP _0x16C
                 ;                break;
                 ;        case 5: PORTD=seg_array[5];
                 _0xE:
000090 30e5      	CPI  R30,LOW(0x5)
000091 e0a0      	LDI  R26,HIGH(0x5)
000092 07fa      	CPC  R31,R26
000093 f419      	BRNE _0xF
                +
000094 91e0 0196+LDS R30 , _seg_array + ( 10 )
                 	__GETB1MN _seg_array,10
000096 c022      	RJMP _0x16C
                 ;                break;
                 ;        case 6: PORTD=seg_array[6];
                 _0xF:
000097 30e6      	CPI  R30,LOW(0x6)
000098 e0a0      	LDI  R26,HIGH(0x6)
000099 07fa      	CPC  R31,R26
00009a f419      	BRNE _0x10
                +
00009b 91e0 0198+LDS R30 , _seg_array + ( 12 )
                 	__GETB1MN _seg_array,12
00009d c01b      	RJMP _0x16C
                 ;                break;
                 ;        case 7: PORTD=seg_array[7];
                 _0x10:
00009e 30e7      	CPI  R30,LOW(0x7)
00009f e0a0      	LDI  R26,HIGH(0x7)
0000a0 07fa      	CPC  R31,R26
0000a1 f419      	BRNE _0x11
                +
0000a2 91e0 019a+LDS R30 , _seg_array + ( 14 )
                 	__GETB1MN _seg_array,14
0000a4 c014      	RJMP _0x16C
                 ;                break;
                 ;        case 8: PORTD=seg_array[8];
                 _0x11:
0000a5 30e8      	CPI  R30,LOW(0x8)
0000a6 e0a0      	LDI  R26,HIGH(0x8)
0000a7 07fa      	CPC  R31,R26
0000a8 f419      	BRNE _0x12
                +
0000a9 91e0 019c+LDS R30 , _seg_array + ( 16 )
                 	__GETB1MN _seg_array,16
0000ab c00d      	RJMP _0x16C
                 ;                break;
                 ;        case 9: PORTD=seg_array[9];
                 _0x12:
0000ac 30e9      	CPI  R30,LOW(0x9)
0000ad e0a0      	LDI  R26,HIGH(0x9)
0000ae 07fa      	CPC  R31,R26
0000af f419      	BRNE _0x13
                +
0000b0 91e0 019e+LDS R30 , _seg_array + ( 18 )
                 	__GETB1MN _seg_array,18
0000b2 c006      	RJMP _0x16C
                 ;                break;
                 ;        case 10: PORTD=seg_array[10];
                 _0x13:
0000b3 30ea      	CPI  R30,LOW(0xA)
0000b4 e0a0      	LDI  R26,HIGH(0xA)
0000b5 07fa      	CPC  R31,R26
0000b6 f419      	BRNE _0x9
                +
0000b7 91e0 01a0+LDS R30 , _seg_array + ( 20 )
                 	__GETB1MN _seg_array,20
                 _0x16C:
0000b9 bbe2      	OUT  0x12,R30
                 ;                break;
                 ;        }
                 _0x9:
                 ;	}
0000ba 9621      	ADIW R28,1
0000bb 9508      	RET
                 ;
                 ;void dislay7seg()
                 ;    {
                 _dislay7seg:
                 ;    ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000bc d273      	RCALL SUBOPT_0x4
                 ;    ledddv = 0;
0000bd d277      	RCALL SUBOPT_0x5
                 ;    leddch = 0;
                 ;    leddtr = 0;
                 ;    seg_display(10);
                 ;
                 ;    switch (d_type)
0000be d27c      	RCALL SUBOPT_0x6
                 ;        {
                 ;        case 1:
0000bf f5a1      	BRNE _0x26
                 ;        {
                 ;        if (d_anod > 9) d_anod=1;
0000c0 d27f      	RCALL SUBOPT_0x7
0000c1 971a      	SBIW R26,10
0000c2 f00c      	BRLT _0x27
0000c3 d281      	RCALL SUBOPT_0x8
                 ;        if (d_anod <= 2)
                 _0x27:
0000c4 d287      	RCALL SUBOPT_0x9
0000c5 f424      	BRGE _0x28
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000c6 d269      	RCALL SUBOPT_0x4
                 ;            ledddv = 1;
0000c7 9aac      	SBI  0x15,4
                 ;            leddch = 0;
0000c8 d286      	RCALL SUBOPT_0xA
                 ;            leddtr = 0;
                 ;            seg_display(donvi);
0000c9 d288      	RCALL SUBOPT_0xB
                 ;            }
                 ;        if ((d_anod > 2)&&(d_anod <= 3))
                 _0x28:
0000ca d281      	RCALL SUBOPT_0x9
0000cb f014      	BRLT _0x38
0000cc d289      	RCALL SUBOPT_0xC
0000cd f00c      	BRLT _0x39
                 _0x38:
0000ce c002      	RJMP _0x37
                 _0x39:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000cf d260      	RCALL SUBOPT_0x4
                 ;            ledddv = 0;
0000d0 d264      	RCALL SUBOPT_0x5
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        if ((d_anod > 3)&&(d_anod <= 5))
                 _0x37:
0000d1 d284      	RCALL SUBOPT_0xC
0000d2 f014      	BRLT _0x49
0000d3 d285      	RCALL SUBOPT_0xD
0000d4 f00c      	BRLT _0x4A
                 _0x49:
0000d5 c005      	RJMP _0x48
                 _0x4A:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000d6 d259      	RCALL SUBOPT_0x4
                 ;            ledddv = 0;
0000d7 98ac      	CBI  0x15,4
                 ;            leddch = 1;
0000d8 9aa8      	SBI  0x15,0
                 ;            leddtr = 0;
0000d9 98c5      	CBI  0x18,5
                 ;            seg_display(chuc);
0000da d281      	RCALL SUBOPT_0xE
                 ;            }
                 ;        if ((d_anod > 5)&&(d_anod <= 6))
                 _0x48:
0000db d27d      	RCALL SUBOPT_0xD
0000dc f014      	BRLT _0x5A
0000dd d282      	RCALL SUBOPT_0xF
0000de f00c      	BRLT _0x5B
                 _0x5A:
0000df c002      	RJMP _0x59
                 _0x5B:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000e0 d24f      	RCALL SUBOPT_0x4
                 ;            ledddv = 0;
0000e1 d253      	RCALL SUBOPT_0x5
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        if ((d_anod > 6)&&(d_anod <= 8))
                 _0x59:
0000e2 d27d      	RCALL SUBOPT_0xF
0000e3 f014      	BRLT _0x6B
0000e4 d27e      	RCALL SUBOPT_0x10
0000e5 f00c      	BRLT _0x6C
                 _0x6B:
0000e6 c005      	RJMP _0x6A
                 _0x6C:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000e7 d248      	RCALL SUBOPT_0x4
                 ;            ledddv = 0;
0000e8 98ac      	CBI  0x15,4
                 ;            leddch = 0;
0000e9 98a8      	CBI  0x15,0
                 ;            leddtr = 1;
0000ea 9ac5      	SBI  0x18,5
                 ;            seg_display(tram);
0000eb d27a      	RCALL SUBOPT_0x11
                 ;            }
                 ;        if ((d_anod > 8)&&(d_anod <= 9))
                 _0x6A:
0000ec d276      	RCALL SUBOPT_0x10
0000ed f014      	BRLT _0x7C
0000ee d27b      	RCALL SUBOPT_0x12
0000ef f00c      	BRLT _0x7D
                 _0x7C:
0000f0 c002      	RJMP _0x7B
                 _0x7D:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
0000f1 d23e      	RCALL SUBOPT_0x4
                 ;            ledddv = 0;
0000f2 d242      	RCALL SUBOPT_0x5
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        break;
                 _0x7B:
0000f3 c04d      	RJMP _0x25
                 ;        }
                 ;        case 2:
                 _0x26:
0000f4 d233      	RCALL SUBOPT_0x2
0000f5 f5c9      	BRNE _0x8C
                 ;        {
                 ;        if (d_anod > 9) d_anod=1;
0000f6 d273      	RCALL SUBOPT_0x12
0000f7 f00c      	BRLT _0x8D
0000f8 d24c      	RCALL SUBOPT_0x8
                 ;        if (d_anod <= 2)
                 _0x8D:
0000f9 d252      	RCALL SUBOPT_0x9
0000fa f424      	BRGE _0x8E
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
0000fb d271      	RCALL SUBOPT_0x13
                 ;            ledxdv=1;
0000fc 9aab      	SBI  0x15,3
                 ;            ledxch=0;
0000fd d272      	RCALL SUBOPT_0x14
                 ;            ledxtr=0;
                 ;            seg_display(donvi);
0000fe d253      	RCALL SUBOPT_0xB
                 ;            }
                 ;        if ((d_anod > 2)&&(d_anod <= 3))
                 _0x8E:
0000ff d24c      	RCALL SUBOPT_0x9
000100 f014      	BRLT _0x9E
000101 d254      	RCALL SUBOPT_0xC
000102 f00c      	BRLT _0x9F
                 _0x9E:
000103 c004      	RJMP _0x9D
                 _0x9F:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000104 d268      	RCALL SUBOPT_0x13
                 ;            ledxdv=0;
000105 98ab      	CBI  0x15,3
                 ;            ledxch=0;
000106 d269      	RCALL SUBOPT_0x14
                 ;            ledxtr=0;
                 ;            seg_display(10);
000107 d26b      	RCALL SUBOPT_0x15
                 ;            }
                 ;        if ((d_anod > 3)&&(d_anod <= 5))
                 _0x9D:
000108 d24d      	RCALL SUBOPT_0xC
000109 f014      	BRLT _0xAF
00010a d24e      	RCALL SUBOPT_0xD
00010b f00c      	BRLT _0xB0
                 _0xAF:
00010c c005      	RJMP _0xAE
                 _0xB0:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
00010d d25f      	RCALL SUBOPT_0x13
                 ;            ledxdv=0;
00010e 98ab      	CBI  0x15,3
                 ;            ledxch=1;
00010f 9aa9      	SBI  0x15,1
                 ;            ledxtr=0;
000110 98ad      	CBI  0x15,5
                 ;            seg_display(chuc);
000111 d24a      	RCALL SUBOPT_0xE
                 ;            }
                 ;        if ((d_anod > 5)&&(d_anod <= 6))
                 _0xAE:
000112 d246      	RCALL SUBOPT_0xD
000113 f014      	BRLT _0xC0
000114 d24b      	RCALL SUBOPT_0xF
000115 f00c      	BRLT _0xC1
                 _0xC0:
000116 c004      	RJMP _0xBF
                 _0xC1:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000117 d255      	RCALL SUBOPT_0x13
                 ;            ledxdv=0;
000118 98ab      	CBI  0x15,3
                 ;            ledxch=0;
000119 d256      	RCALL SUBOPT_0x14
                 ;            ledxtr=0;
                 ;            seg_display(10);
00011a d258      	RCALL SUBOPT_0x15
                 ;            }
                 ;        if ((d_anod > 6)&&(d_anod <= 8))
                 _0xBF:
00011b d244      	RCALL SUBOPT_0xF
00011c f014      	BRLT _0xD1
00011d d245      	RCALL SUBOPT_0x10
00011e f00c      	BRLT _0xD2
                 _0xD1:
00011f c005      	RJMP _0xD0
                 _0xD2:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
000120 d24c      	RCALL SUBOPT_0x13
                 ;            ledxdv=0;
000121 98ab      	CBI  0x15,3
                 ;            ledxch=0;
000122 98a9      	CBI  0x15,1
                 ;            ledxtr=1;
000123 9aad      	SBI  0x15,5
                 ;            seg_display(tram);
000124 d241      	RCALL SUBOPT_0x11
                 ;            }
                 ;        if ((d_anod > 8)&&(d_anod <= 9))
                 _0xD0:
000125 d23d      	RCALL SUBOPT_0x10
000126 f014      	BRLT _0xE2
000127 d242      	RCALL SUBOPT_0x12
000128 f00c      	BRLT _0xE3
                 _0xE2:
000129 c004      	RJMP _0xE1
                 _0xE3:
                 ;            {
                 ;            ledvdv=0; ledddv = 0; leddch = 0; leddtr = 0;
00012a d242      	RCALL SUBOPT_0x13
                 ;            ledxdv=0;
00012b 98ab      	CBI  0x15,3
                 ;            ledxch=0;
00012c d243      	RCALL SUBOPT_0x14
                 ;            ledxtr=0;
                 ;            seg_display(10);
00012d d245      	RCALL SUBOPT_0x15
                 ;            }
                 ;        break;
                 _0xE1:
00012e c012      	RJMP _0x25
                 ;        }
                 ;        case 3:
                 _0x8C:
00012f d1fc      	RCALL SUBOPT_0x3
000130 f481      	BRNE _0x25
                 ;        {
                 ;        if (d_anod > 9) d_anod=1;
000131 d238      	RCALL SUBOPT_0x12
000132 f00c      	BRLT _0xF3
000133 d211      	RCALL SUBOPT_0x8
                 ;        if (d_anod <= 2)
                 _0xF3:
000134 d217      	RCALL SUBOPT_0x9
000135 f424      	BRGE _0xF4
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
000136 d1f9      	RCALL SUBOPT_0x4
                 ;            ledvdv = 1;
000137 9aaa      	SBI  0x15,2
                 ;            leddch = 0;
000138 d216      	RCALL SUBOPT_0xA
                 ;            leddtr = 0;
                 ;            seg_display(donvi);
000139 d218      	RCALL SUBOPT_0xB
                 ;            }
                 ;        if ((d_anod > 2)&&(d_anod <= 9))
                 _0xF4:
00013a d211      	RCALL SUBOPT_0x9
00013b f014      	BRLT _0x104
00013c d22d      	RCALL SUBOPT_0x12
00013d f00c      	BRLT _0x105
                 _0x104:
00013e c002      	RJMP _0x103
                 _0x105:
                 ;            {
                 ;            ledvdv=0; ledxdv=0; ledxch=0; ledxtr=0;
00013f d1f0      	RCALL SUBOPT_0x4
                 ;            ledddv = 0;
000140 d1f4      	RCALL SUBOPT_0x5
                 ;            leddch = 0;
                 ;            leddtr = 0;
                 ;            seg_display(10);
                 ;            }
                 ;        break;
                 _0x103:
                 ;        }
                 ;        }
                 _0x25:
                 ;    }
000141 9508      	RET
                 ;#include <calculate.c>
                 ;
                 ;
                 ;void calculate()
                 ; 0000 0021     {
                 _calculate:
                 ;          if (d_type ==1)
000142 d233      	RCALL SUBOPT_0x16
000143 f549      	BRNE _0x114
                 ;            {
                 ;            cou_1s=0;
000144 d237      	RCALL SUBOPT_0x17
                 ;            cou_r_pre--;
                 ;            tram  = cou_r_pre/100;
                 ;            chuc  = (cou_r_pre-tram*100)/10;
                 ;            donvi = (cou_r_pre%10)&0x0f;
                 ;
                 ;            if (chuc == 0) chuc=10;
000145 f411      	BRNE _0x115
000146 d26f      	RCALL SUBOPT_0x18
000147 d271      	RCALL SUBOPT_0x19
                 ;            if (tram == 0) tram=10;
                 _0x115:
000148 d275      	RCALL SUBOPT_0x1A
000149 f409      	BRNE _0x116
00014a d279      	RCALL SUBOPT_0x1B
                 ;            while(d_type ==1)
                 _0x116:
                 _0x117:
00014b d22a      	RCALL SUBOPT_0x16
00014c f501      	BRNE _0x119
                 ;                {
                 ;                if (cou_1s >=40)
00014d d27c      	RCALL SUBOPT_0x1C
00014e f0ec      	BRLT _0x11A
                 ;                    {
                 ;                    if ((li_r ==1)&&(li_g ==1)) d_type=3;
00014f 9bb1      	SBIS 0x16,1
000150 c002      	RJMP _0x11C
000151 99b2      	SBIC 0x16,2
000152 c001      	RJMP _0x11D
                 _0x11C:
000153 c002      	RJMP _0x11B
                 _0x11D:
000154 d27b      	RCALL SUBOPT_0x1D
000155 d27d      	RCALL SUBOPT_0x1E
                 ;                    cou_1s =0;
                 _0x11B:
000156 d225      	RCALL SUBOPT_0x17
                 ;                    cou_r_pre--;
                 ;                    tram  = cou_r_pre/100;
                 ;
                 ;                    chuc  = (cou_r_pre-tram*100)/10;
                 ;                    donvi = (cou_r_pre%10)&0x0f;
                 ;
                 ;                    if (chuc == 0){ if (cou_r_pre > 99) chuc = 0; else chuc = 10; }
000157 f441      	BRNE _0x11E
000158 d27f      	RCALL SUBOPT_0x1F
000159 36a4      	CPI  R26,LOW(0x64)
00015a e0e0      	LDI  R30,HIGH(0x64)
00015b 07be      	CPC  R27,R30
00015c f014      	BRLT _0x11F
00015d d27f      	RCALL SUBOPT_0x20
00015e c001      	RJMP _0x120
                 _0x11F:
00015f d283      	RCALL SUBOPT_0x21
                 _0x120:
                 ;                    if (tram == 0) tram=10;
                 _0x11E:
000160 d25d      	RCALL SUBOPT_0x1A
000161 f409      	BRNE _0x121
000162 d261      	RCALL SUBOPT_0x1B
                 ;                    if (cou_r_pre <=-1)
                 _0x121:
000163 d274      	RCALL SUBOPT_0x1F
000164 d280      	RCALL SUBOPT_0x22
000165 17ea      	CP   R30,R26
000166 07fb      	CPC  R31,R27
000167 f024      	BRLT _0x122
                 ;                        {
                 ;                        cou_r_pre =-1;
000168 d27c      	RCALL SUBOPT_0x22
000169 d27e      	RCALL SUBOPT_0x23
                 ;                        donvi=10;
00016a d282      	RCALL SUBOPT_0x24
                 ;                        chuc=10;
                 ;                        tram=10;
00016b d258      	RCALL SUBOPT_0x1B
                 ;                        }
                 ;                    }
                 _0x122:
                 ;                }
                 _0x11A:
00016c cfde      	RJMP _0x117
                 _0x119:
                 ;            }
                 ; /////////////////////////////////////////////////////////////////////
                 ;        if (d_type ==2)
                 _0x114:
00016d d285      	RCALL SUBOPT_0x25
00016e f509      	BRNE _0x123
                 ;            {
                 ;            cou_1s=0;
00016f d289      	RCALL SUBOPT_0x26
                 ;            cou_g_pre--;
                 ;            tram  = cou_g_pre/100;
                 ;            chuc  = (cou_g_pre-tram*100)/10;
                 ;            donvi = (cou_g_pre%10)&0x0f;
                 ;
                 ;            if (chuc == 0) chuc=10;
000170 f409      	BRNE _0x124
000171 d271      	RCALL SUBOPT_0x21
                 ;            if (tram == 0) tram=10;
                 _0x124:
000172 d24b      	RCALL SUBOPT_0x1A
000173 f409      	BRNE _0x125
000174 d24f      	RCALL SUBOPT_0x1B
                 ;            while(d_type ==2)
                 _0x125:
                 _0x126:
000175 d27d      	RCALL SUBOPT_0x25
000176 f4c9      	BRNE _0x128
                 ;                {
                 ;                if (cou_1s >=40)
000177 d252      	RCALL SUBOPT_0x1C
000178 f0b4      	BRLT _0x129
                 ;                    {
                 ;                    cou_1s =0;
000179 d27f      	RCALL SUBOPT_0x26
                 ;                    cou_g_pre--;
                 ;                    tram  = cou_g_pre/100;
                 ;                    chuc  = (cou_g_pre-tram*100)/10;
                 ;                    donvi = (cou_g_pre%10)&0x0f;
                 ;
                 ;                    if (chuc == 0){ if (cou_g_pre > 99) chuc = 0; else chuc = 10; }
00017a f441      	BRNE _0x12A
00017b d2b2      	RCALL SUBOPT_0x27
00017c 36a4      	CPI  R26,LOW(0x64)
00017d e0e0      	LDI  R30,HIGH(0x64)
00017e 07be      	CPC  R27,R30
00017f f014      	BRLT _0x12B
000180 d25c      	RCALL SUBOPT_0x20
000181 c001      	RJMP _0x12C
                 _0x12B:
000182 d260      	RCALL SUBOPT_0x21
                 _0x12C:
                 ;                    if (tram == 0) tram=10;
                 _0x12A:
000183 d23a      	RCALL SUBOPT_0x1A
000184 f409      	BRNE _0x12D
000185 d23e      	RCALL SUBOPT_0x1B
                 ;                    if (cou_g_pre <=-1)
                 _0x12D:
000186 d2a7      	RCALL SUBOPT_0x27
000187 d25d      	RCALL SUBOPT_0x22
000188 17ea      	CP   R30,R26
000189 07fb      	CPC  R31,R27
00018a f024      	BRLT _0x12E
                 ;                        {
                 ;                        cou_g_pre =-1;
00018b d259      	RCALL SUBOPT_0x22
00018c d2a6      	RCALL SUBOPT_0x28
                 ;                        donvi=10;
00018d d25f      	RCALL SUBOPT_0x24
                 ;                        chuc=10;
                 ;                        tram=10;
00018e d235      	RCALL SUBOPT_0x1B
                 ;                        }
                 ;                    }
                 _0x12E:
                 ;                }
                 _0x129:
00018f cfe5      	RJMP _0x126
                 _0x128:
                 ;            }
                 ; /////////////////////////////////////////////////////////////////////
                 ;        if (d_type ==3)
                 _0x123:
000190 d2a7      	RCALL SUBOPT_0x29
000191 f5a1      	BRNE _0x12F
                 ;            {
                 ;            cou_1s=0;
000192 d2ab      	RCALL SUBOPT_0x2A
                 ;            cou_y_pre--;
000193 d2b0      	RCALL SUBOPT_0x2B
                 ;            donvi = (cou_y_pre%10)&0x0f;
                 ;            chuc=10;
                 ;            tram=10;
000194 d22f      	RCALL SUBOPT_0x1B
                 ;            while(d_type ==3)
                 _0x130:
000195 d2a2      	RCALL SUBOPT_0x29
000196 f579      	BRNE _0x132
                 ;                {
                 ;                if (cou_y >440)
000197 d2c0      	RCALL SUBOPT_0x2C
000198 3ba9      	CPI  R26,LOW(0x1B9)
000199 e0e1      	LDI  R30,HIGH(0x1B9)
00019a 07be      	CPC  R27,R30
00019b f0a4      	BRLT _0x133
                 ;                    {
                 ;                    reset_interupt01();
00019c decd      	RCALL _reset_interupt01
                 ;                    cou_r =0; cou_g =0; cou_y =0;
00019d d2bf      	RCALL SUBOPT_0x2D
00019e d2c4      	RCALL SUBOPT_0x2E
00019f d2c9      	RCALL SUBOPT_0x2F
                 ;                    cou_dr =0;
0001a0 d2ce      	RCALL SUBOPT_0x30
                 ;                    cou_dg =0;
0001a1 d2d3      	RCALL SUBOPT_0x31
                 ;                    cou_dy =0;
0001a2 d2d8      	RCALL SUBOPT_0x32
                 ;                    cou_1s=0;
0001a3 d29a      	RCALL SUBOPT_0x2A
                 ;                    d_type =0;
0001a4 e0e0      	LDI  R30,LOW(0)
0001a5 93e0 0160 	STS  _d_type,R30
0001a7 93e0 0161 	STS  _d_type+1,R30
                 ;                    kds_cv =3;
0001a9 d226      	RCALL SUBOPT_0x1D
0001aa 93e0 018a 	STS  _kds_cv,R30
0001ac 93f0 018b 	STS  _kds_cv+1,R31
                 ;                    f_cv =1;
0001ae 9468      	SET
0001af f820      	BLD  R2,0
                 ;                    }
                 ;                if (cou_1s >=39)
                 _0x133:
0001b0 91a0 0178 	LDS  R26,_cou_1s
0001b2 91b0 0179 	LDS  R27,_cou_1s+1
0001b4 9797      	SBIW R26,39
0001b5 f07c      	BRLT _0x134
                 ;                    {
                 ;                    cou_1s =0;
0001b6 d287      	RCALL SUBOPT_0x2A
                 ;                    cou_y_pre--;
0001b7 d28c      	RCALL SUBOPT_0x2B
                 ;                    donvi = (cou_y_pre%10)&0x0f;
                 ;                    chuc=10;
                 ;                    tram=10;
0001b8 d20b      	RCALL SUBOPT_0x1B
                 ;                    if (cou_y_pre <=-1)
0001b9 91a0 0184 	LDS  R26,_cou_y_pre
0001bb 91b0 0185 	LDS  R27,_cou_y_pre+1
0001bd d227      	RCALL SUBOPT_0x22
0001be 17ea      	CP   R30,R26
0001bf 07fb      	CPC  R31,R27
0001c0 f024      	BRLT _0x135
                 ;                        {
                 ;                        cou_y_pre =-1;
0001c1 d223      	RCALL SUBOPT_0x22
0001c2 d2be      	RCALL SUBOPT_0x33
                 ;                        donvi=10;
0001c3 d229      	RCALL SUBOPT_0x24
                 ;                        chuc=10;
                 ;                        tram=10;
0001c4 d1ff      	RCALL SUBOPT_0x1B
                 ;                        }
                 ;                    }
                 _0x135:
                 ;                }
                 _0x134:
0001c5 cfcf      	RJMP _0x130
                 _0x132:
                 ;            }
                 ;    }
                 _0x12F:
0001c6 9508      	RET
                 ;
                 ;
                 ;// Timer 0 overflow interrupt service routine: 8us overflow at 1ms
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0026 {
                 _timer0_ovf_isr:
0001c7 920a      	ST   -Y,R0
0001c8 921a      	ST   -Y,R1
0001c9 92fa      	ST   -Y,R15
0001ca 936a      	ST   -Y,R22
0001cb 937a      	ST   -Y,R23
0001cc 938a      	ST   -Y,R24
0001cd 939a      	ST   -Y,R25
0001ce 93aa      	ST   -Y,R26
0001cf 93ba      	ST   -Y,R27
0001d0 93ea      	ST   -Y,R30
0001d1 93fa      	ST   -Y,R31
0001d2 b7ef      	IN   R30,SREG
0001d3 93ea      	ST   -Y,R30
                 ; 0000 0027 // Reinitialize Timer 0 value
                 ; 0000 0028 TCNT0=0x82;
0001d4 e8e2      	LDI  R30,LOW(130)
0001d5 bfe2      	OUT  0x32,R30
                 ; 0000 0029 // Place your code here
                 ; 0000 002A cou_lm++;
0001d6 e7ac      	LDI  R26,LOW(_cou_lm)
0001d7 e0b1      	LDI  R27,HIGH(_cou_lm)
0001d8 d2ad      	RCALL SUBOPT_0x34
                 ; 0000 002B 
                 ; 0000 002C if (cou_lm >=25){
0001d9 91a0 017c 	LDS  R26,_cou_lm
0001db 91b0 017d 	LDS  R27,_cou_lm+1
0001dd 9759      	SBIW R26,25
0001de f40c      	BRGE PC+2
0001df c082      	RJMP _0x136
                 ; 0000 002D     cou_lm =0;
0001e0 e0e0      	LDI  R30,LOW(0)
0001e1 93e0 017c 	STS  _cou_lm,R30
0001e3 93e0 017d 	STS  _cou_lm+1,R30
                 ; 0000 002E     switch (d_type)
0001e5 d155      	RCALL SUBOPT_0x6
                 ; 0000 002F             {
                 ; 0000 0030             case 1: cou_r++;
0001e6 f551      	BRNE _0x13A
0001e7 e7a2      	LDI  R26,LOW(_cou_r)
0001e8 e0b1      	LDI  R27,HIGH(_cou_r)
0001e9 d29c      	RCALL SUBOPT_0x34
                 ; 0000 0031                     if ((li_r ==1)&&(li_g ==0))
0001ea 9bb1      	SBIS 0x16,1
0001eb c005      	RJMP _0x13C
0001ec e0a0      	LDI  R26,0
0001ed 99b2      	SBIC 0x16,2
0001ee e0a1      	LDI  R26,1
0001ef 30a0      	CPI  R26,LOW(0x0)
0001f0 f009      	BREQ _0x13D
                 _0x13C:
0001f1 c00f      	RJMP _0x13B
                 _0x13D:
                 ; 0000 0032                         {
                 ; 0000 0033                         cou_dr++; d_type=2;
0001f2 e6aa      	LDI  R26,LOW(_cou_dr)
0001f3 e0b1      	LDI  R27,HIGH(_cou_dr)
0001f4 d291      	RCALL SUBOPT_0x34
0001f5 9731      	SBIW R30,1
0001f6 e0e2      	LDI  R30,LOW(2)
0001f7 e0f0      	LDI  R31,HIGH(2)
0001f8 d293      	RCALL SUBOPT_0x35
                 ; 0000 0034                         if (kds_cv <=0) cou_r_pre =cou_r/40;
0001f9 f034      	BRLT _0x13E
0001fa 91a0 0172 	LDS  R26,_cou_r
0001fc 91b0 0173 	LDS  R27,_cou_r+1
0001fe d294      	RCALL SUBOPT_0x36
0001ff d1e8      	RCALL SUBOPT_0x23
                 ; 0000 0035                         cou_r =0;
                 _0x13E:
000200 d25c      	RCALL SUBOPT_0x2D
                 ; 0000 0036                         }
                 ; 0000 0037                     if (cou_dr >=5)
                 _0x13B:
000201 91a0 016a 	LDS  R26,_cou_dr
000203 91b0 016b 	LDS  R27,_cou_dr+1
000205 9715      	SBIW R26,5
000206 f04c      	BRLT _0x13F
                 ; 0000 0038                         {cou_dr =0; f_red =cou_r_pre; }
000207 d267      	RCALL SUBOPT_0x30
000208 91e0 0180 	LDS  R30,_cou_r_pre
00020a 91f0 0181 	LDS  R31,_cou_r_pre+1
00020c 93e0 0186 	STS  _f_red,R30
00020e 93f0 0187 	STS  _f_red+1,R31
                 ; 0000 0039                     break;
                 _0x13F:
000210 c04e      	RJMP _0x139
                 ; 0000 003A             case 2: cou_g++;
                 _0x13A:
000211 d116      	RCALL SUBOPT_0x2
000212 f529      	BRNE _0x140
000213 e7a4      	LDI  R26,LOW(_cou_g)
000214 e0b1      	LDI  R27,HIGH(_cou_g)
000215 d270      	RCALL SUBOPT_0x34
                 ; 0000 003B                     if ((li_r ==1)&&(li_g ==1))
000216 9bb1      	SBIS 0x16,1
000217 c002      	RJMP _0x142
000218 99b2      	SBIC 0x16,2
000219 c001      	RJMP _0x143
                 _0x142:
00021a c00d      	RJMP _0x141
                 _0x143:
                 ; 0000 003C                         {
                 ; 0000 003D                         cou_dg++; d_type=3;
00021b e6ac      	LDI  R26,LOW(_cou_dg)
00021c e0b1      	LDI  R27,HIGH(_cou_dg)
00021d d268      	RCALL SUBOPT_0x34
00021e d1b1      	RCALL SUBOPT_0x1D
00021f d26c      	RCALL SUBOPT_0x35
                 ; 0000 003E                         if (kds_cv <=0) cou_g_pre =cou_g/40;
000220 f034      	BRLT _0x144
000221 91a0 0174 	LDS  R26,_cou_g
000223 91b0 0175 	LDS  R27,_cou_g+1
000225 d26d      	RCALL SUBOPT_0x36
000226 d20c      	RCALL SUBOPT_0x28
                 ; 0000 003F                         cou_g =0;
                 _0x144:
000227 d23b      	RCALL SUBOPT_0x2E
                 ; 0000 0040                         }
                 ; 0000 0041                     if (cou_dg >=5)
                 _0x141:
000228 91a0 016c 	LDS  R26,_cou_dg
00022a 91b0 016d 	LDS  R27,_cou_dg+1
00022c 9715      	SBIW R26,5
00022d f04c      	BRLT _0x145
                 ; 0000 0042                         {cou_dg =0; f_gree =cou_g_pre; }
00022e d246      	RCALL SUBOPT_0x31
00022f 91e0 0182 	LDS  R30,_cou_g_pre
000231 91f0 0183 	LDS  R31,_cou_g_pre+1
000233 93e0 0188 	STS  _f_gree,R30
000235 93f0 0189 	STS  _f_gree+1,R31
                 ; 0000 0043                     break;
                 _0x145:
000237 c027      	RJMP _0x139
                 ; 0000 0044             case 3: cou_y++;
                 _0x140:
000238 d0f3      	RCALL SUBOPT_0x3
000239 f529      	BRNE _0x139
00023a e7a6      	LDI  R26,LOW(_cou_y)
00023b e0b1      	LDI  R27,HIGH(_cou_y)
00023c d249      	RCALL SUBOPT_0x34
                 ; 0000 0045                     if ((li_r ==0)&&(li_g ==1))
00023d e0a0      	LDI  R26,0
00023e 99b1      	SBIC 0x16,1
00023f e0a1      	LDI  R26,1
000240 30a0      	CPI  R26,LOW(0x0)
000241 f411      	BRNE _0x148
000242 99b2      	SBIC 0x16,2
000243 c001      	RJMP _0x149
                 _0x148:
000244 c00b      	RJMP _0x147
                 _0x149:
                 ; 0000 0046                         {
                 ; 0000 0047                         cou_dy++; d_type=1;
000245 e6ae      	LDI  R26,LOW(_cou_dy)
000246 e0b1      	LDI  R27,HIGH(_cou_dy)
000247 d23e      	RCALL SUBOPT_0x34
000248 e0e1      	LDI  R30,LOW(1)
000249 e0f0      	LDI  R31,HIGH(1)
00024a d241      	RCALL SUBOPT_0x35
                 ; 0000 0048                         if (kds_cv <=0) cou_y_pre =cou_y/40;
00024b f01c      	BRLT _0x14A
00024c d20b      	RCALL SUBOPT_0x2C
00024d d245      	RCALL SUBOPT_0x36
00024e d232      	RCALL SUBOPT_0x33
                 ; 0000 0049                         cou_y =0;
                 _0x14A:
00024f d219      	RCALL SUBOPT_0x2F
                 ; 0000 004A                         }
                 ; 0000 004B                     if (cou_dy >=5)
                 _0x147:
000250 91a0 016e 	LDS  R26,_cou_dy
000252 91b0 016f 	LDS  R27,_cou_dy+1
000254 9715      	SBIW R26,5
000255 f04c      	BRLT _0x14B
                 ; 0000 004C                         {cou_dy =0; f_yell =cou_y_pre; }
000256 d224      	RCALL SUBOPT_0x32
000257 91e0 0184 	LDS  R30,_cou_y_pre
000259 91f0 0185 	LDS  R31,_cou_y_pre+1
00025b 93e0 017a 	STS  _f_yell,R30
00025d 93f0 017b 	STS  _f_yell+1,R31
                 ; 0000 004D                     break;
                 _0x14B:
                 ; 0000 004E             }
                 _0x139:
                 ; 0000 004F         cou_1s++;
00025f e7a8      	LDI  R26,LOW(_cou_1s)
000260 e0b1      	LDI  R27,HIGH(_cou_1s)
000261 d224      	RCALL SUBOPT_0x34
                 ; 0000 0050     }
                 ; 0000 0051 
                 ; 0000 0052 cou_wd++;
                 _0x136:
000262 e7ae      	LDI  R26,LOW(_cou_wd)
000263 e0b1      	LDI  R27,HIGH(_cou_wd)
000264 d221      	RCALL SUBOPT_0x34
                 ; 0000 0053 if (cou_wd ==15) {cou_wd =0; #asm("WDR"); }
000265 91a0 017e 	LDS  R26,_cou_wd
000267 91b0 017f 	LDS  R27,_cou_wd+1
000269 971f      	SBIW R26,15
00026a f431      	BRNE _0x14C
00026b e0e0      	LDI  R30,LOW(0)
00026c 93e0 017e 	STS  _cou_wd,R30
00026e 93e0 017f 	STS  _cou_wd+1,R30
000270 95a8      	WDR
                 ; 0000 0054 d_anod++;
                 _0x14C:
000271 e6a8      	LDI  R26,LOW(_d_anod)
000272 e0b1      	LDI  R27,HIGH(_d_anod)
000273 d212      	RCALL SUBOPT_0x34
                 ; 0000 0055 dislay7seg();
000274 de47      	RCALL _dislay7seg
                 ; 0000 0056 
                 ; 0000 0057 
                 ; 0000 0058 }
000275 91e9      	LD   R30,Y+
000276 bfef      	OUT  SREG,R30
000277 91f9      	LD   R31,Y+
000278 91e9      	LD   R30,Y+
000279 91b9      	LD   R27,Y+
00027a 91a9      	LD   R26,Y+
00027b 9199      	LD   R25,Y+
00027c 9189      	LD   R24,Y+
00027d 9179      	LD   R23,Y+
00027e 9169      	LD   R22,Y+
00027f 90f9      	LD   R15,Y+
000280 9019      	LD   R1,Y+
000281 9009      	LD   R0,Y+
000282 9518      	RETI
                 ;/*
                 ;// Timer1 overflow interrupt service routine: 1us>overflow at
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ;{
                 ;// Reinitialize Timer1 value
                 ;TCNT1H=0xf9bf >> 8;
                 ;TCNT1L=0xf9bf & 0xff;
                 ;// Place your code here
                 ;cou_wd++;
                 ;if (cou_wd ==15) {cou_wd =0; #asm("WDR"); }
                 ;d_anod++;
                 ;dislay7seg();
                 ;
                 ;}
                 ;*/
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 006B {
                 _main:
                 ; 0000 006C 
                 ; 0000 006D // Input/Output Ports initialization
                 ; 0000 006E // Port B initialization
                 ; 0000 006F // Func7=In Func6=In Func5=Out Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0070 // State7=T State6=T State5=1 State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0071 PORTB=0x20;
000283 e2e0      	LDI  R30,LOW(32)
000284 bbe8      	OUT  0x18,R30
                 ; 0000 0072 DDRB=0x20;
000285 bbe7      	OUT  0x17,R30
                 ; 0000 0073 
                 ; 0000 0074 // Port C initialization
                 ; 0000 0075 // Func6=In Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 0076 // State6=T State5=1 State4=1 State3=1 State2=1 State1=1 State0=1
                 ; 0000 0077 PORTC=0x3F;
000286 e3ef      	LDI  R30,LOW(63)
000287 bbe5      	OUT  0x15,R30
                 ; 0000 0078 DDRC=0x3F;
000288 bbe4      	OUT  0x14,R30
                 ; 0000 0079 
                 ; 0000 007A // Port D initialization
                 ; 0000 007B // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 007C // State7=1 State6=1 State5=1 State4=1 State3=1 State2=1 State1=1 State0=1
                 ; 0000 007D PORTD=0x00;
000289 e0e0      	LDI  R30,LOW(0)
00028a bbe2      	OUT  0x12,R30
                 ; 0000 007E DDRD=0xFF;
00028b efef      	LDI  R30,LOW(255)
00028c bbe1      	OUT  0x11,R30
                 ; 0000 007F 
                 ; 0000 0080 if (li_r ==0) d_type=1; else if (li_g ==0) d_type=2; else d_type=3;
00028d 99b1      	SBIC 0x16,1
00028e c003      	RJMP _0x14D
00028f e0e1      	LDI  R30,LOW(1)
000290 e0f0      	LDI  R31,HIGH(1)
000291 c006      	RJMP _0x16D
                 _0x14D:
000292 99b2      	SBIC 0x16,2
000293 c003      	RJMP _0x14F
000294 e0e2      	LDI  R30,LOW(2)
000295 e0f0      	LDI  R31,HIGH(2)
000296 c001      	RJMP _0x16D
                 _0x14F:
000297 d138      	RCALL SUBOPT_0x1D
                 _0x16D:
000298 93e0 0160 	STS  _d_type,R30
00029a 93f0 0161 	STS  _d_type+1,R31
                 ; 0000 0081 
                 ; 0000 0082 set_interupt01();
00029c ddc3      	RCALL _set_interupt01
                 ; 0000 0083 
                 ; 0000 0084 while (1)
                 ; 0000 0085       {
                 ; 0000 0086       // Place your code here
                 ; 0000 0087       if(kds_cv <=0) { kds_cv =0; calculate();}
00029d d1f9      	RCALL SUBOPT_0x37
00029e f00c      	BRLT _0x154
00029f d1fd      	RCALL SUBOPT_0x38
                 ; 0000 0088 
                 ; 0000 0089       while(1)
                 _0x154:
                 _0x155:
                 ; 0000 008A         {
                 ; 0000 008B         if(kds_cv <=0) { kds_cv =0; calculate();}
0002a0 d1f6      	RCALL SUBOPT_0x37
0002a1 f00c      	BRLT _0x158
0002a2 d1fa      	RCALL SUBOPT_0x38
                 ; 0000 008C 
                 ; 0000 008D         if(kds_cv >1)
                 _0x158:
0002a3 91a0 018a 	LDS  R26,_kds_cv
0002a5 91b0 018b 	LDS  R27,_kds_cv+1
0002a7 9712      	SBIW R26,2
0002a8 f40c      	BRGE PC+2
0002a9 c065      	RJMP _0x159
                 ; 0000 008E         {
                 ; 0000 008F         while(f_cv ==1)
                 _0x15A:
0002aa fe20      	SBRS R2,0
0002ab c01e      	RJMP _0x15C
                 ; 0000 0090             {
                 ; 0000 0091             if ((li_r ==0)|(li_g ==0))
0002ac e0a0      	LDI  R26,0
0002ad 99b1      	SBIC 0x16,1
0002ae e0a1      	LDI  R26,1
0002af d1f3      	RCALL SUBOPT_0x39
0002b0 2e0e      	MOV  R0,R30
0002b1 e0a0      	LDI  R26,0
0002b2 99b2      	SBIC 0x16,2
0002b3 e0a1      	LDI  R26,1
0002b4 d1ee      	RCALL SUBOPT_0x39
0002b5 29e0      	OR   R30,R0
0002b6 f091      	BREQ _0x15D
                 ; 0000 0092                 {
                 ; 0000 0093                 set_interupt01();
0002b7 dda8      	RCALL _set_interupt01
                 ; 0000 0094                 f_cv=0;
0002b8 94e8      	CLT
0002b9 f820      	BLD  R2,0
                 ; 0000 0095                 if (li_r ==0) d_type=1; else if (li_g ==0) d_type=2; else d_type=3;
0002ba 99b1      	SBIC 0x16,1
0002bb c003      	RJMP _0x15E
0002bc e0e1      	LDI  R30,LOW(1)
0002bd e0f0      	LDI  R31,HIGH(1)
0002be c006      	RJMP _0x16E
                 _0x15E:
0002bf 99b2      	SBIC 0x16,2
0002c0 c003      	RJMP _0x160
0002c1 e0e2      	LDI  R30,LOW(2)
0002c2 e0f0      	LDI  R31,HIGH(2)
0002c3 c001      	RJMP _0x16E
                 _0x160:
0002c4 d10b      	RCALL SUBOPT_0x1D
                 _0x16E:
0002c5 93e0 0160 	STS  _d_type,R30
0002c7 93f0 0161 	STS  _d_type+1,R31
                 ; 0000 0096                 }
                 ; 0000 0097             }
                 _0x15D:
0002c9 cfe0      	RJMP _0x15A
                 _0x15C:
                 ; 0000 0098         for(i=0; i <2; i++)
0002ca e0e0      	LDI  R30,LOW(0)
0002cb 93e0 0170 	STS  _i,R30
0002cd 93e0 0171 	STS  _i+1,R30
                 _0x163:
0002cf 91a0 0170 	LDS  R26,_i
0002d1 91b0 0171 	LDS  R27,_i+1
0002d3 9712      	SBIW R26,2
0002d4 f5ac      	BRGE _0x164
                 ; 0000 0099         {
                 ; 0000 009A         gree =0; yell =0; red =0;
0002d5 94e8      	CLT
0002d6 f821      	BLD  R2,1
0002d7 f822      	BLD  R2,2
0002d8 f823      	BLD  R2,3
                 ; 0000 009B         cou_r_pre =f_red;
0002d9 91e0 0186 	LDS  R30,_f_red
0002db 91f0 0187 	LDS  R31,_f_red+1
0002dd d10a      	RCALL SUBOPT_0x23
                 ; 0000 009C         cou_g_pre =f_gree;
0002de 91e0 0188 	LDS  R30,_f_gree
0002e0 91f0 0189 	LDS  R31,_f_gree+1
0002e2 d150      	RCALL SUBOPT_0x28
                 ; 0000 009D         cou_y_pre =f_yell;
0002e3 91e0 017a 	LDS  R30,_f_yell
0002e5 91f0 017b 	LDS  R31,_f_yell+1
0002e7 d199      	RCALL SUBOPT_0x33
                 ; 0000 009E         while ((gree ==0)&(yell ==0)&(red ==0))
                 _0x165:
0002e8 e0a0      	LDI  R26,0
0002e9 fc21      	SBRC R2,1
0002ea e0a1      	LDI  R26,1
0002eb d1b7      	RCALL SUBOPT_0x39
0002ec 2e0e      	MOV  R0,R30
0002ed e0a0      	LDI  R26,0
0002ee fc22      	SBRC R2,2
0002ef e0a1      	LDI  R26,1
0002f0 d1b2      	RCALL SUBOPT_0x39
0002f1 220e      	AND  R0,R30
0002f2 e0a0      	LDI  R26,0
0002f3 fc23      	SBRC R2,3
0002f4 e0a1      	LDI  R26,1
0002f5 d1ad      	RCALL SUBOPT_0x39
0002f6 21e0      	AND  R30,R0
0002f7 f071      	BREQ _0x167
                 ; 0000 009F             {
                 ; 0000 00A0             if (d_type ==1) red =1;
0002f8 d07d      	RCALL SUBOPT_0x16
0002f9 f411      	BRNE _0x168
0002fa 9468      	SET
0002fb f823      	BLD  R2,3
                 ; 0000 00A1             if (d_type ==2) gree =1;
                 _0x168:
0002fc d0f6      	RCALL SUBOPT_0x25
0002fd f411      	BRNE _0x169
0002fe 9468      	SET
0002ff f821      	BLD  R2,1
                 ; 0000 00A2             if (d_type ==3) yell =1;
                 _0x169:
000300 d137      	RCALL SUBOPT_0x29
000301 f411      	BRNE _0x16A
000302 9468      	SET
000303 f822      	BLD  R2,2
                 ; 0000 00A3             calculate();
                 _0x16A:
000304 de3d      	RCALL _calculate
                 ; 0000 00A4             }
000305 cfe2      	RJMP _0x165
                 _0x167:
                 ; 0000 00A5         }
000306 e7a0      	LDI  R26,LOW(_i)
000307 e0b1      	LDI  R27,HIGH(_i)
000308 d17d      	RCALL SUBOPT_0x34
000309 cfc5      	RJMP _0x163
                 _0x164:
                 ; 0000 00A6         kds_cv =0;
00030a e0e0      	LDI  R30,LOW(0)
00030b 93e0 018a 	STS  _kds_cv,R30
00030d 93e0 018b 	STS  _kds_cv+1,R30
                 ; 0000 00A7         }
                 ; 0000 00A8 
                 ; 0000 00A9       }
                 _0x159:
00030f cf90      	RJMP _0x155
                 ; 0000 00AA     }
                 ; 0000 00AB 
                 ; 0000 00AC }
                 _0x16B:
000310 cfff      	RJMP _0x16B
                 
                 	.DSEG
                 _d_type:
000160           	.BYTE 0x2
                 _donvi:
000162           	.BYTE 0x2
                 _chuc:
000164           	.BYTE 0x2
                 _tram:
000166           	.BYTE 0x2
                 _d_anod:
000168           	.BYTE 0x2
                 _cou_dr:
00016a           	.BYTE 0x2
                 _cou_dg:
00016c           	.BYTE 0x2
                 _cou_dy:
00016e           	.BYTE 0x2
                 _i:
000170           	.BYTE 0x2
                 _cou_r:
000172           	.BYTE 0x2
                 _cou_g:
000174           	.BYTE 0x2
                 _cou_y:
000176           	.BYTE 0x2
                 _cou_1s:
000178           	.BYTE 0x2
                 _f_yell:
00017a           	.BYTE 0x2
                 _cou_lm:
00017c           	.BYTE 0x2
                 _cou_wd:
00017e           	.BYTE 0x2
                 _cou_r_pre:
000180           	.BYTE 0x2
                 _cou_g_pre:
000182           	.BYTE 0x2
                 _cou_y_pre:
000184           	.BYTE 0x2
                 _f_red:
000186           	.BYTE 0x2
                 _f_gree:
000188           	.BYTE 0x2
                 _kds_cv:
00018a           	.BYTE 0x2
                 _seg_array:
00018c           	.BYTE 0x16
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x0:
000311 bfe2      	OUT  0x32,R30
000312 e0e0      	LDI  R30,LOW(0)
000313 bde2      	OUT  0x22,R30
000314 bde5      	OUT  0x25,R30
000315 bde4      	OUT  0x24,R30
000316 bde3      	OUT  0x23,R30
000317 bfe5      	OUT  0x35,R30
000318 e0e1      	LDI  R30,LOW(1)
000319 bfe9      	OUT  0x39,R30
00031a e0e0      	LDI  R30,LOW(0)
00031b b9ea      	OUT  0xA,R30
00031c e8e0      	LDI  R30,LOW(128)
00031d b9e8      	OUT  0x8,R30
00031e e0e0      	LDI  R30,LOW(0)
00031f bfe0      	OUT  0x30,R30
000320 b9e6      	OUT  0x6,R30
000321 b9ed      	OUT  0xD,R30
000322 bfe6      	OUT  0x36,R30
000323 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000324 30e1      	CPI  R30,LOW(0x1)
000325 e0a0      	LDI  R26,HIGH(0x1)
000326 07fa      	CPC  R31,R26
000327 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000328 30e2      	CPI  R30,LOW(0x2)
000329 e0a0      	LDI  R26,HIGH(0x2)
00032a 07fa      	CPC  R31,R26
00032b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
00032c 30e3      	CPI  R30,LOW(0x3)
00032d e0a0      	LDI  R26,HIGH(0x3)
00032e 07fa      	CPC  R31,R26
00032f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x4:
000330 98aa      	CBI  0x15,2
000331 98ab      	CBI  0x15,3
000332 98a9      	CBI  0x15,1
000333 98ad      	CBI  0x15,5
000334 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
000335 98ac      	CBI  0x15,4
000336 98a8      	CBI  0x15,0
000337 98c5      	CBI  0x18,5
000338 e0ea      	LDI  R30,LOW(10)
000339 93ea      	ST   -Y,R30
00033a cd38      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00033b 91e0 0160 	LDS  R30,_d_type
00033d 91f0 0161 	LDS  R31,_d_type+1
00033f cfe4      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:79 WORDS
                 SUBOPT_0x7:
000340 91a0 0168 	LDS  R26,_d_anod
000342 91b0 0169 	LDS  R27,_d_anod+1
000344 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x8:
000345 e0e1      	LDI  R30,LOW(1)
000346 e0f0      	LDI  R31,HIGH(1)
000347 93e0 0168 	STS  _d_anod,R30
000349 93f0 0169 	STS  _d_anod+1,R31
00034b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
00034c dff3      	RCALL SUBOPT_0x7
00034d 9713      	SBIW R26,3
00034e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
00034f 98a8      	CBI  0x15,0
000350 98c5      	CBI  0x18,5
000351 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB:
000352 91e0 0162 	LDS  R30,_donvi
000354 93ea      	ST   -Y,R30
000355 cd1d      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000356 dfe9      	RCALL SUBOPT_0x7
000357 9714      	SBIW R26,4
000358 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000359 dfe6      	RCALL SUBOPT_0x7
00035a 9716      	SBIW R26,6
00035b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
00035c 91e0 0164 	LDS  R30,_chuc
00035e 93ea      	ST   -Y,R30
00035f cd13      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000360 dfdf      	RCALL SUBOPT_0x7
000361 9717      	SBIW R26,7
000362 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000363 dfdc      	RCALL SUBOPT_0x7
000364 9719      	SBIW R26,9
000365 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000366 91e0 0166 	LDS  R30,_tram
000368 93ea      	ST   -Y,R30
000369 cd09      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
00036a dfd5      	RCALL SUBOPT_0x7
00036b 971a      	SBIW R26,10
00036c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x13:
00036d 98aa      	CBI  0x15,2
00036e 98ac      	CBI  0x15,4
00036f cfdf      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000370 98a9      	CBI  0x15,1
000371 98ad      	CBI  0x15,5
000372 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
000373 e0ea      	LDI  R30,LOW(10)
000374 93ea      	ST   -Y,R30
000375 ccfd      	RJMP _seg_display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x16:
000376 91a0 0160 	LDS  R26,_d_type
000378 91b0 0161 	LDS  R27,_d_type+1
00037a 9711      	SBIW R26,1
00037b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:58 WORDS
                 SUBOPT_0x17:
00037c e0e0      	LDI  R30,LOW(0)
00037d 93e0 0178 	STS  _cou_1s,R30
00037f 93e0 0179 	STS  _cou_1s+1,R30
000381 e8a0      	LDI  R26,LOW(_cou_r_pre)
000382 e0b1      	LDI  R27,HIGH(_cou_r_pre)
000383 91ed      	LD   R30,X+
000384 91fd      	LD   R31,X+
000385 9731      	SBIW R30,1
000386 93fe      	ST   -X,R31
000387 93ee      	ST   -X,R30
000388 91a0 0180 	LDS  R26,_cou_r_pre
00038a 91b0 0181 	LDS  R27,_cou_r_pre+1
00038c e6e4      	LDI  R30,LOW(100)
00038d e0f0      	LDI  R31,HIGH(100)
00038e d140      	RCALL __DIVW21
00038f 93e0 0166 	STS  _tram,R30
000391 93f0 0167 	STS  _tram+1,R31
000393 e6a4      	LDI  R26,LOW(100)
000394 e0b0      	LDI  R27,HIGH(100)
000395 d121      	RCALL __MULW12
000396 91a0 0180 	LDS  R26,_cou_r_pre
000398 91b0 0181 	LDS  R27,_cou_r_pre+1
00039a 1bae      	SUB  R26,R30
00039b 0bbf      	SBC  R27,R31
00039c e0ea      	LDI  R30,LOW(10)
00039d e0f0      	LDI  R31,HIGH(10)
00039e d130      	RCALL __DIVW21
00039f 93e0 0164 	STS  _chuc,R30
0003a1 93f0 0165 	STS  _chuc+1,R31
0003a3 91a0 0180 	LDS  R26,_cou_r_pre
0003a5 91b0 0181 	LDS  R27,_cou_r_pre+1
0003a7 e0ea      	LDI  R30,LOW(10)
0003a8 e0f0      	LDI  R31,HIGH(10)
0003a9 d12a      	RCALL __MODW21
0003aa 70ef      	ANDI R30,LOW(0xF)
0003ab 70f0      	ANDI R31,HIGH(0xF)
0003ac 93e0 0162 	STS  _donvi,R30
0003ae 93f0 0163 	STS  _donvi+1,R31
0003b0 91e0 0164 	LDS  R30,_chuc
0003b2 91f0 0165 	LDS  R31,_chuc+1
0003b4 9730      	SBIW R30,0
0003b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x18:
0003b6 e0ea      	LDI  R30,LOW(10)
0003b7 e0f0      	LDI  R31,HIGH(10)
0003b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x19:
0003b9 93e0 0164 	STS  _chuc,R30
0003bb 93f0 0165 	STS  _chuc+1,R31
0003bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1A:
0003be 91e0 0166 	LDS  R30,_tram
0003c0 91f0 0167 	LDS  R31,_tram+1
0003c2 9730      	SBIW R30,0
0003c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x1B:
0003c4 dff1      	RCALL SUBOPT_0x18
0003c5 93e0 0166 	STS  _tram,R30
0003c7 93f0 0167 	STS  _tram+1,R31
0003c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C:
0003ca 91a0 0178 	LDS  R26,_cou_1s
0003cc 91b0 0179 	LDS  R27,_cou_1s+1
0003ce 9798      	SBIW R26,40
0003cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D:
0003d0 e0e3      	LDI  R30,LOW(3)
0003d1 e0f0      	LDI  R31,HIGH(3)
0003d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
0003d3 93e0 0160 	STS  _d_type,R30
0003d5 93f0 0161 	STS  _d_type+1,R31
0003d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
0003d8 91a0 0180 	LDS  R26,_cou_r_pre
0003da 91b0 0181 	LDS  R27,_cou_r_pre+1
0003dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x20:
0003dd e0e0      	LDI  R30,LOW(0)
0003de 93e0 0164 	STS  _chuc,R30
0003e0 93e0 0165 	STS  _chuc+1,R30
0003e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
0003e3 dfd2      	RCALL SUBOPT_0x18
0003e4 cfd4      	RJMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
0003e5 efef      	LDI  R30,LOW(65535)
0003e6 efff      	LDI  R31,HIGH(65535)
0003e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x23:
0003e8 93e0 0180 	STS  _cou_r_pre,R30
0003ea 93f0 0181 	STS  _cou_r_pre+1,R31
0003ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x24:
0003ed dfc8      	RCALL SUBOPT_0x18
0003ee 93e0 0162 	STS  _donvi,R30
0003f0 93f0 0163 	STS  _donvi+1,R31
0003f2 cff0      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
0003f3 91a0 0160 	LDS  R26,_d_type
0003f5 91b0 0161 	LDS  R27,_d_type+1
0003f7 9712      	SBIW R26,2
0003f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x26:
0003f9 e0e0      	LDI  R30,LOW(0)
0003fa 93e0 0178 	STS  _cou_1s,R30
0003fc 93e0 0179 	STS  _cou_1s+1,R30
0003fe e8a2      	LDI  R26,LOW(_cou_g_pre)
0003ff e0b1      	LDI  R27,HIGH(_cou_g_pre)
000400 91ed      	LD   R30,X+
000401 91fd      	LD   R31,X+
000402 9731      	SBIW R30,1
000403 93fe      	ST   -X,R31
000404 93ee      	ST   -X,R30
000405 91a0 0182 	LDS  R26,_cou_g_pre
000407 91b0 0183 	LDS  R27,_cou_g_pre+1
000409 e6e4      	LDI  R30,LOW(100)
00040a e0f0      	LDI  R31,HIGH(100)
00040b d0c3      	RCALL __DIVW21
00040c 93e0 0166 	STS  _tram,R30
00040e 93f0 0167 	STS  _tram+1,R31
000410 e6a4      	LDI  R26,LOW(100)
000411 e0b0      	LDI  R27,HIGH(100)
000412 d0a4      	RCALL __MULW12
000413 91a0 0182 	LDS  R26,_cou_g_pre
000415 91b0 0183 	LDS  R27,_cou_g_pre+1
000417 1bae      	SUB  R26,R30
000418 0bbf      	SBC  R27,R31
000419 df9c      	RCALL SUBOPT_0x18
00041a d0b4      	RCALL __DIVW21
00041b df9d      	RCALL SUBOPT_0x19
00041c 91a0 0182 	LDS  R26,_cou_g_pre
00041e 91b0 0183 	LDS  R27,_cou_g_pre+1
000420 df95      	RCALL SUBOPT_0x18
000421 d0b2      	RCALL __MODW21
000422 70ef      	ANDI R30,LOW(0xF)
000423 70f0      	ANDI R31,HIGH(0xF)
000424 93e0 0162 	STS  _donvi,R30
000426 93f0 0163 	STS  _donvi+1,R31
000428 91e0 0164 	LDS  R30,_chuc
00042a 91f0 0165 	LDS  R31,_chuc+1
00042c 9730      	SBIW R30,0
00042d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
00042e 91a0 0182 	LDS  R26,_cou_g_pre
000430 91b0 0183 	LDS  R27,_cou_g_pre+1
000432 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x28:
000433 93e0 0182 	STS  _cou_g_pre,R30
000435 93f0 0183 	STS  _cou_g_pre+1,R31
000437 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x29:
000438 91a0 0160 	LDS  R26,_d_type
00043a 91b0 0161 	LDS  R27,_d_type+1
00043c 9713      	SBIW R26,3
00043d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
00043e e0e0      	LDI  R30,LOW(0)
00043f 93e0 0178 	STS  _cou_1s,R30
000441 93e0 0179 	STS  _cou_1s+1,R30
000443 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2B:
000444 e8a4      	LDI  R26,LOW(_cou_y_pre)
000445 e0b1      	LDI  R27,HIGH(_cou_y_pre)
000446 91ed      	LD   R30,X+
000447 91fd      	LD   R31,X+
000448 9731      	SBIW R30,1
000449 93fe      	ST   -X,R31
00044a 93ee      	ST   -X,R30
00044b 91a0 0184 	LDS  R26,_cou_y_pre
00044d 91b0 0185 	LDS  R27,_cou_y_pre+1
00044f df66      	RCALL SUBOPT_0x18
000450 d083      	RCALL __MODW21
000451 70ef      	ANDI R30,LOW(0xF)
000452 70f0      	ANDI R31,HIGH(0xF)
000453 93e0 0162 	STS  _donvi,R30
000455 93f0 0163 	STS  _donvi+1,R31
000457 cf8b      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000458 91a0 0176 	LDS  R26,_cou_y
00045a 91b0 0177 	LDS  R27,_cou_y+1
00045c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2D:
00045d e0e0      	LDI  R30,LOW(0)
00045e 93e0 0172 	STS  _cou_r,R30
000460 93e0 0173 	STS  _cou_r+1,R30
000462 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2E:
000463 e0e0      	LDI  R30,LOW(0)
000464 93e0 0174 	STS  _cou_g,R30
000466 93e0 0175 	STS  _cou_g+1,R30
000468 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2F:
000469 e0e0      	LDI  R30,LOW(0)
00046a 93e0 0176 	STS  _cou_y,R30
00046c 93e0 0177 	STS  _cou_y+1,R30
00046e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x30:
00046f e0e0      	LDI  R30,LOW(0)
000470 93e0 016a 	STS  _cou_dr,R30
000472 93e0 016b 	STS  _cou_dr+1,R30
000474 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
000475 e0e0      	LDI  R30,LOW(0)
000476 93e0 016c 	STS  _cou_dg,R30
000478 93e0 016d 	STS  _cou_dg+1,R30
00047a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
00047b e0e0      	LDI  R30,LOW(0)
00047c 93e0 016e 	STS  _cou_dy,R30
00047e 93e0 016f 	STS  _cou_dy+1,R30
000480 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x33:
000481 93e0 0184 	STS  _cou_y_pre,R30
000483 93f0 0185 	STS  _cou_y_pre+1,R31
000485 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x34:
000486 91ed      	LD   R30,X+
000487 91fd      	LD   R31,X+
000488 9631      	ADIW R30,1
000489 93fe      	ST   -X,R31
00048a 93ee      	ST   -X,R30
00048b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x35:
00048c df46      	RCALL SUBOPT_0x1E
00048d 91a0 018a 	LDS  R26,_kds_cv
00048f 91b0 018b 	LDS  R27,_kds_cv+1
000491 d05e      	RCALL __CPW02
000492 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x36:
000493 e2e8      	LDI  R30,LOW(40)
000494 e0f0      	LDI  R31,HIGH(40)
000495 d039      	RCALL __DIVW21
000496 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37:
000497 91a0 018a 	LDS  R26,_kds_cv
000499 91b0 018b 	LDS  R27,_kds_cv+1
00049b d054      	RCALL __CPW02
00049c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
00049d e0e0      	LDI  R30,LOW(0)
00049e 93e0 018a 	STS  _kds_cv,R30
0004a0 93e0 018b 	STS  _kds_cv+1,R30
0004a2 cc9f      	RJMP _calculate
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39:
0004a3 e0e0      	LDI  R30,LOW(0)
0004a4 d005      	RCALL __EQB12
0004a5 9508      	RET
                 
                 
                 	.CSEG
                 __ANEGW1:
0004a6 95f1      	NEG  R31
0004a7 95e1      	NEG  R30
0004a8 40f0      	SBCI R31,0
0004a9 9508      	RET
                 
                 __EQB12:
0004aa 17ea      	CP   R30,R26
0004ab e0e1      	LDI  R30,1
0004ac f009      	BREQ __EQB12T
0004ad 27ee      	CLR  R30
                 __EQB12T:
0004ae 9508      	RET
                 
                 __MULW12U:
0004af 9ffa      	MUL  R31,R26
0004b0 2df0      	MOV  R31,R0
0004b1 9feb      	MUL  R30,R27
0004b2 0df0      	ADD  R31,R0
0004b3 9fea      	MUL  R30,R26
0004b4 2de0      	MOV  R30,R0
0004b5 0df1      	ADD  R31,R1
0004b6 9508      	RET
                 
                 __MULW12:
0004b7 d02a      	RCALL __CHKSIGNW
0004b8 dff6      	RCALL __MULW12U
0004b9 f40e      	BRTC __MULW121
0004ba dfeb      	RCALL __ANEGW1
                 __MULW121:
0004bb 9508      	RET
                 
                 __DIVW21U:
0004bc 2400      	CLR  R0
0004bd 2411      	CLR  R1
0004be e190      	LDI  R25,16
                 __DIVW21U1:
0004bf 0faa      	LSL  R26
0004c0 1fbb      	ROL  R27
0004c1 1c00      	ROL  R0
0004c2 1c11      	ROL  R1
0004c3 1a0e      	SUB  R0,R30
0004c4 0a1f      	SBC  R1,R31
0004c5 f418      	BRCC __DIVW21U2
0004c6 0e0e      	ADD  R0,R30
0004c7 1e1f      	ADC  R1,R31
0004c8 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0004c9 60a1      	SBR  R26,1
                 __DIVW21U3:
0004ca 959a      	DEC  R25
0004cb f799      	BRNE __DIVW21U1
0004cc 01fd      	MOVW R30,R26
0004cd 01d0      	MOVW R26,R0
0004ce 9508      	RET
                 
                 __DIVW21:
0004cf d012      	RCALL __CHKSIGNW
0004d0 dfeb      	RCALL __DIVW21U
0004d1 f40e      	BRTC __DIVW211
0004d2 dfd3      	RCALL __ANEGW1
                 __DIVW211:
0004d3 9508      	RET
                 
                 __MODW21:
0004d4 94e8      	CLT
0004d5 ffb7      	SBRS R27,7
0004d6 c004      	RJMP __MODW211
0004d7 95a0      	COM  R26
0004d8 95b0      	COM  R27
0004d9 9611      	ADIW R26,1
0004da 9468      	SET
                 __MODW211:
0004db fdf7      	SBRC R31,7
0004dc dfc9      	RCALL __ANEGW1
0004dd dfde      	RCALL __DIVW21U
0004de 01fd      	MOVW R30,R26
0004df f40e      	BRTC __MODW212
0004e0 dfc5      	RCALL __ANEGW1
                 __MODW212:
0004e1 9508      	RET
                 
                 __CHKSIGNW:
0004e2 94e8      	CLT
0004e3 fff7      	SBRS R31,7
0004e4 c002      	RJMP __CHKSW1
0004e5 dfc0      	RCALL __ANEGW1
0004e6 9468      	SET
                 __CHKSW1:
0004e7 ffb7      	SBRS R27,7
0004e8 c006      	RJMP __CHKSW2
0004e9 95a0      	COM  R26
0004ea 95b0      	COM  R27
0004eb 9611      	ADIW R26,1
0004ec f800      	BLD  R0,0
0004ed 9403      	INC  R0
0004ee fa00      	BST  R0,0
                 __CHKSW2:
0004ef 9508      	RET
                 
                 __CPW02:
0004f0 2400      	CLR  R0
0004f1 160a      	CP   R0,R26
0004f2 060b      	CPC  R0,R27
0004f3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  25 r1 :   8 r2 :  12 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   2 
r24:   9 r25:   6 r26: 125 r27:  63 r28:   2 r29:   1 r30: 238 r31:  89 
x  :  19 y  :  30 z  :   7 
Registers used: 17 out of 35 (48.6%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :   4 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   9 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   5 
brge  :   6 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :  42 brmi  :   0 brne  :  40 brpl  :   0 brsh  :   0 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :  24 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   6 
cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :   4 cp    :   5 
cpc   :  17 cpi   :  15 cpse  :   0 dec   :   2 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   1 
inc   :   1 ld    :  21 ldd   :   0 ldi   : 141 lds   :  90 lpm   :   7 
lsl   :   1 lsr   :   0 mov   :   4 movw  :   6 mul   :   3 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   0 out   :  36 
pop   :   0 push  :   0 rcall : 228 ret   :  61 reti  :   1 rjmp  :  92 
rol   :   3 ror   :   0 sbc   :   3 sbci  :   1 sbi   :   7 sbic  :  11 
sbis  :   3 sbiw  :  30 sbr   :   1 sbrc  :   4 sbrs  :   4 sec   :   0 
seh   :   0 sei   :   2 sen   :   0 ser   :   0 ses   :   0 set   :   6 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  28 std   :   0 
sts   :  72 sub   :   3 subi  :   0 swap  :   0 tst   :   0 wdr   :   1 

Instructions used: 55 out of 114 (48.2%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0009e8   2476     60   2536    8192  31.0%
[.dseg] 0x000060 0x0001a2      0     66     66    1119   5.9%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
